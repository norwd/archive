<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
  <title>
qcc.ml</title>
  <meta name="GENERATOR" content="caml2html caml2html-1.4.3">
<style type="text/css">
code,pre { color:black;background-color:white }a.Cannot { color:black;text-decoration:none }.Cstring { color: #aa4444; }
.Craise { color: red; }
.Cconstructor { color: #0033cc; }
.Ccomment { color: #990000; }
.Cassert,
.Cinclude,
.Copen { color: #cc9900; }
.Cbar,
.Cdo,
.Cdone,
.Cdownto,
.Celse,
.Cfor,
.Cif,
.Clazy,
.Cmatch,
.Cnew,
.Cor,
.Cthen,
.Cto,
.Ctry,
.Cwhen,
.Cwhile,
.Cwith { color: #77aaaa; }
.Cbegin,
.Cend,
.Cobject,
.Csig,
.Cstruct { color: #990099; }
.Clinenum { color: black; background-color: silver; }
.Cbackground { background-color: white; }
.Cannot:hover { background-color: #b4eeb4; }
.Calphakeyword,
.Casr,
.Cland,
.Clor,
.Clsl,
.Clsr,
.Clxor,
.Cmod { color: #808080; }
.Cfalse,
.Cnonalphakeyword,
.Cquotation,
.Ctrue { }
.Cand,
.Cas,
.Cclass,
.Cconstraint,
.Cexception,
.Cexternal,
.Cfun,
.Cfunction,
.Cfunctor,
.Cin,
.Cinherit,
.Cinitializer,
.Clet,
.Cmethod,
.Cmodule,
.Cmutable,
.Cof,
.Cprivate,
.Crec,
.Ctype,
.Cval,
.Cvirtual { color: green; }
</style>
</head>
<body>

<pre><a name="qcc.ml"></a><span class="Clinenum">   1:</span><span class="Cbackground"> </span><span class="Clet">let</span> dbg <span class="Cnonalphakeyword">=</span> ref <span class="Ctrue">true</span>
<span class="Clinenum">   2:</span><span class="Cbackground"> </span><span class="Cand">and</span> inch <span class="Cnonalphakeyword">=</span> ref stdin
<span class="Clinenum">   3:</span><span class="Cbackground"> </span>
<span class="Clinenum">   4:</span><span class="Cbackground"> </span><span class="Ctype">type</span> tok <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">   5:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cof">of</span> string
<span class="Clinenum">   6:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">ILit</span> <span class="Cof">of</span> int
<span class="Clinenum">   7:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">SLit</span> <span class="Cof">of</span> int <span class="Cnonalphakeyword">*</span> string
<span class="Clinenum">   8:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> <span class="Cof">of</span> int
<span class="Clinenum">   9:</span><span class="Cbackground"> </span>
<span class="Clinenum">  10:</span><span class="Cbackground"> </span><span class="Clet">let</span> bufferize f <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  11:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> buf <span class="Cnonalphakeyword">=</span> ref <span class="Cconstructor">None</span> <span class="Cin">in</span>
<span class="Clinenum">  12:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  13:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> !buf <span class="Cwith">with</span>
<span class="Clinenum">  14:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> x <span class="Cnonalphakeyword">-&gt;</span> buf <span class="Cnonalphakeyword">:=</span> <span class="Cconstructor">None</span><span class="Cnonalphakeyword">;</span> x
<span class="Clinenum">  15:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">None</span> <span class="Cnonalphakeyword">-&gt;</span> f <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span>
<span class="Clinenum">  16:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> x <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  17:</span><span class="Cbackground"> </span>    <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>!buf <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">None</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  18:</span><span class="Cbackground"> </span>    buf <span class="Cnonalphakeyword">:=</span> <span class="Cconstructor">Some</span> x<span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  19:</span><span class="Cbackground"> </span>
<span class="Clinenum">  20:</span><span class="Cbackground"> </span><span class="Clet">let</span> getch<span class="Cnonalphakeyword">,</span> ungetch <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  21:</span><span class="Cbackground"> </span>  bufferize <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span> input_char !inch<span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  22:</span><span class="Cbackground"> </span>
<span class="Clinenum">  23:</span><span class="Cbackground"> </span><span class="Clet">let</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  24:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> ch <span class="Cnonalphakeyword">=</span> getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum">  25:</span><span class="Cbackground"> </span>  ungetch ch<span class="Cnonalphakeyword">;</span> ch
<span class="Clinenum">  26:</span><span class="Cbackground"> </span>
<span class="Clinenum">  27:</span><span class="Cbackground"> </span><span class="Clet">let</span> addsym<span class="Cnonalphakeyword">,</span> symstr<span class="Cnonalphakeyword">,</span> symitr <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  28:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> symtab <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Array</span><span class="Cnonalphakeyword">.</span>make 100 <span class="Cstring">""</span> <span class="Cand">and</span> syms <span class="Cnonalphakeyword">=</span> ref 0 <span class="Cin">in</span>
<span class="Clinenum">  29:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> find s n <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  30:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> n &gt;= !syms <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>incr syms<span class="Cnonalphakeyword">;</span> n<span class="Cnonalphakeyword">)</span> <span class="Celse">else</span>
<span class="Clinenum">  31:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> symtab<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> s <span class="Cthen">then</span> n <span class="Celse">else</span>
<span class="Clinenum">  32:</span><span class="Cbackground"> </span>    find s <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum">  33:</span><span class="Cbackground"> </span>
<span class="Clinenum">  34:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> s <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  35:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> sid <span class="Cnonalphakeyword">=</span> find s 0 <span class="Cin">in</span>
<span class="Clinenum">  36:</span><span class="Cbackground"> </span>    symtab<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>sid<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">&lt;-</span> s<span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  37:</span><span class="Cbackground"> </span>    sid<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span>
<span class="Clinenum">  38:</span><span class="Cbackground"> </span>
<span class="Clinenum">  39:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> n <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  40:</span><span class="Cbackground"> </span>    <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">&lt;</span> !syms<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  41:</span><span class="Cbackground"> </span>    symtab<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span>
<span class="Clinenum">  42:</span><span class="Cbackground"> </span>
<span class="Clinenum">  43:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> f <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  44:</span><span class="Cbackground"> </span>    <span class="Cfor">for</span> i<span class="Cnonalphakeyword">=</span>0 <span class="Cto">to</span> !syms-1 <span class="Cdo">do</span>
<span class="Clinenum">  45:</span><span class="Cbackground"> </span>      f i symtab<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  46:</span><span class="Cbackground"> </span>    <span class="Cdone">done</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  47:</span><span class="Cbackground"> </span>
<span class="Clinenum">  48:</span><span class="Cbackground"> </span><span class="Clet">let</span> glo <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>make 0x1000 <span class="Cstring">'\x00'</span>
<span class="Clinenum">  49:</span><span class="Cbackground"> </span><span class="Cand">and</span> gpos <span class="Cnonalphakeyword">=</span> ref 0
<span class="Clinenum">  50:</span><span class="Cbackground"> </span>
<span class="Clinenum">  51:</span><span class="Cbackground"> </span><span class="Clet">let</span> base <span class="Cnonalphakeyword">=</span> 0x400000
<span class="Clinenum">  52:</span><span class="Cbackground"> </span><span class="Cand">and</span> textoff <span class="Cnonalphakeyword">=</span> 0xe8
<span class="Clinenum">  53:</span><span class="Cbackground"> </span>
<span class="Clinenum">  54:</span><span class="Cbackground"> </span><span class="Clet">let</span> next <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  55:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> s <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>create 100 <span class="Cin">in</span>
<span class="Clinenum">  56:</span><span class="Cbackground"> </span>
<span class="Clinenum">  57:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> getq <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  58:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum">  59:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'\\'</span> <span class="Cwhen">when</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> <span class="Cstring">'n'</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  60:</span><span class="Cbackground"> </span>      ignore <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">'\n'</span>
<span class="Clinenum">  61:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> c <span class="Cnonalphakeyword">-&gt;</span> c <span class="Cin">in</span>
<span class="Clinenum">  62:</span><span class="Cbackground"> </span>
<span class="Clinenum">  63:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> isid <span class="Cnonalphakeyword">=</span> <span class="Cfunction">function</span>
<span class="Clinenum">  64:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'a'</span> <span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">.</span> <span class="Cstring">'z'</span> <span class="Cbar">|</span> <span class="Cstring">'A'</span> <span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">.</span> <span class="Cstring">'Z'</span> <span class="Cbar">|</span> <span class="Cstring">'_'</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Ctrue">true</span>
<span class="Clinenum">  65:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cfalse">false</span> <span class="Cin">in</span>
<span class="Clinenum">  66:</span><span class="Cbackground"> </span>
<span class="Clinenum">  67:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> id n ch <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  68:</span><span class="Cbackground"> </span>    s<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>n<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">&lt;-</span> ch<span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  69:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> isid <span class="Cnonalphakeyword">(</span>peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  70:</span><span class="Cbackground"> </span>    <span class="Cthen">then</span> id <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  71:</span><span class="Cbackground"> </span>    <span class="Celse">else</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cnonalphakeyword">(</span><span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>sub s 0 <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum">  72:</span><span class="Cbackground"> </span>
<span class="Clinenum">  73:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> ilit n <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  74:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum">  75:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'0'</span> <span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">.</span> <span class="Cstring">'9'</span> <span class="Cnonalphakeyword">-&gt;</span> ilit <span class="Cnonalphakeyword">(</span>10<span class="Cnonalphakeyword">*</span>n <span class="Cnonalphakeyword">+</span> <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-</span> 48<span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  76:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">ILit</span> n <span class="Cin">in</span>
<span class="Clinenum">  77:</span><span class="Cbackground"> </span>
<span class="Clinenum">  78:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> slit b e <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  79:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum">  80:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'"'</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  81:</span><span class="Cbackground"> </span>      ignore <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  82:</span><span class="Cbackground"> </span>      gpos <span class="Cnonalphakeyword">:=</span> <span class="Cnonalphakeyword">(</span>e <span class="Cnonalphakeyword">+</span> 8<span class="Cnonalphakeyword">)</span> <span class="Cland">land</span> -8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  83:</span><span class="Cbackground"> </span>      <span class="Cconstructor">SLit</span> <span class="Cnonalphakeyword">(</span>b<span class="Cnonalphakeyword">+</span>textoff <span class="Cnonalphakeyword">+</span> base<span class="Cnonalphakeyword">,</span> <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>sub glo b <span class="Cnonalphakeyword">(</span>e<span class="Cnonalphakeyword">-</span>b<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  84:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  85:</span><span class="Cbackground"> </span>      glo<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>e<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">&lt;-</span> getq <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  86:</span><span class="Cbackground"> </span>      slit b <span class="Cnonalphakeyword">(</span>e<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum">  87:</span><span class="Cbackground"> </span>
<span class="Clinenum">  88:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> longops <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  89:</span><span class="Cbackground"> </span>    <span class="Cnonalphakeyword">[</span> <span class="Cstring">"++"</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"--"</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"&amp;&amp;"</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"||"</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"=="</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum">  90:</span><span class="Cbackground"> </span>      <span class="Cstring">"&lt;="</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"&gt;="</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"!="</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"&gt;&gt;"</span><span class="Cnonalphakeyword">;</span> <span class="Cstring">"&lt;&lt;"</span> <span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum">  91:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> op ch <span class="Cnonalphakeyword">=</span> <span class="Cfunction">function</span>
<span class="Clinenum">  92:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> lop <span class="Cnonalphakeyword">::</span> l <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum">  93:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> lop<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>0<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">=</span> ch <span class="Cnonalphakeyword">&amp;&amp;</span> lop<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>1<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">=</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  94:</span><span class="Cbackground"> </span>      <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>ignore <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cconstructor">Op</span> lop<span class="Cnonalphakeyword">)</span>
<span class="Clinenum">  95:</span><span class="Cbackground"> </span>      <span class="Celse">else</span> op ch l
<span class="Clinenum">  96:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cnonalphakeyword">[</span><span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Op</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>make 1 ch<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum">  97:</span><span class="Cbackground"> </span>
<span class="Clinenum">  98:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> cconst <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum">  99:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> ch <span class="Cnonalphakeyword">=</span> getq <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 100:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> qt <span class="Cnonalphakeyword">=</span> getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 101:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> qt &lt;&gt; <span class="Cstring">'\''</span> <span class="Cthen">then</span> failwith <span class="Cstring">"syntax error"</span> <span class="Celse">else</span>
<span class="Clinenum"> 102:</span><span class="Cbackground"> </span>    <span class="Cconstructor">ILit</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code ch<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 103:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 104:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> skip <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 105:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 106:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'\t'</span> <span class="Cbar">|</span> <span class="Cstring">' '</span> <span class="Cbar">|</span> <span class="Cstring">'\r'</span> <span class="Cbar">|</span> <span class="Cstring">'\n'</span> <span class="Cnonalphakeyword">-&gt;</span> skip <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 107:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'/'</span> <span class="Cwhen">when</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> <span class="Cstring">'*'</span> <span class="Cnonalphakeyword">-&gt;</span> com <span class="Cnonalphakeyword">(</span>ignore <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 108:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> ch <span class="Cnonalphakeyword">-&gt;</span> ch
<span class="Clinenum"> 109:</span><span class="Cbackground"> </span>  <span class="Cand">and</span> com <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 110:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 111:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cstring">'*'</span> <span class="Cwhen">when</span> peekch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> <span class="Cstring">'/'</span> <span class="Cnonalphakeyword">-&gt;</span> skip <span class="Cnonalphakeyword">(</span>ignore <span class="Cnonalphakeyword">(</span>getch <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 112:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> com <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 113:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 114:</span><span class="Cbackground"> </span>  <span class="Cfun">fun</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Ccomment">(* next token *)</span>
<span class="Clinenum"> 115:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span>
<span class="Clinenum"> 116:</span><span class="Cbackground"> </span>      <span class="Ctry">try</span> <span class="Cconstructor">Some</span> <span class="Cnonalphakeyword">(</span>skip <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 117:</span><span class="Cbackground"> </span>      <span class="Cwith">with</span> <span class="Cconstructor">End_of_file</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">None</span>
<span class="Clinenum"> 118:</span><span class="Cbackground"> </span>    <span class="Cwith">with</span>
<span class="Clinenum"> 119:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">'0'</span> <span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">.</span> <span class="Cstring">'9'</span> <span class="Cas">as</span> c<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span> ilit <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code c <span class="Cnonalphakeyword">-</span> 48<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 120:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> <span class="Cstring">'"'</span> <span class="Cnonalphakeyword">-&gt;</span> slit !gpos !gpos
<span class="Clinenum"> 121:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> <span class="Cstring">'\''</span> <span class="Cnonalphakeyword">-&gt;</span> cconst <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 122:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> c <span class="Cwhen">when</span> isid c <span class="Cnonalphakeyword">-&gt;</span> id 0 c
<span class="Clinenum"> 123:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Some</span> c <span class="Cnonalphakeyword">-&gt;</span> op c longops
<span class="Clinenum"> 124:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">None</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Op</span> <span class="Cstring">"EOF!"</span>
<span class="Clinenum"> 125:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 126:</span><span class="Cbackground"> </span><span class="Clet">let</span> next<span class="Cnonalphakeyword">,</span> unnext <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 127:</span><span class="Cbackground"> </span>  bufferize next
<span class="Clinenum"> 128:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 129:</span><span class="Cbackground"> </span><span class="Clet">let</span> nextis t <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 130:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> nt <span class="Cnonalphakeyword">=</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 131:</span><span class="Cbackground"> </span>  unnext nt<span class="Cnonalphakeyword">;</span> t <span class="Cnonalphakeyword">=</span> nt
<span class="Clinenum"> 132:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 133:</span><span class="Cbackground"> </span><span class="Clet">let</span> obuf <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>make 0x100000 <span class="Cstring">'\x00'</span>
<span class="Clinenum"> 134:</span><span class="Cbackground"> </span><span class="Cand">and</span> opos <span class="Cnonalphakeyword">=</span> ref 0
<span class="Clinenum"> 135:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 136:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> out x <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 137:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> x &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 138:</span><span class="Cbackground"> </span>    out <span class="Cnonalphakeyword">(</span>x/0x100<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 139:</span><span class="Cbackground"> </span>    obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>!opos<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>chr <span class="Cnonalphakeyword">(</span>x <span class="Cland">land</span> 0xff<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 140:</span><span class="Cbackground"> </span>    incr opos
<span class="Clinenum"> 141:</span><span class="Cbackground"> </span>  <span class="Cend">end</span>
<span class="Clinenum"> 142:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 143:</span><span class="Cbackground"> </span><span class="Clet">let</span> le n x <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 144:</span><span class="Cbackground"> </span>  <span class="Cfor">for</span> i <span class="Cnonalphakeyword">=</span> 0 <span class="Cto">to</span> n/8 <span class="Cnonalphakeyword">-</span> 1 <span class="Cdo">do</span>
<span class="Clinenum"> 145:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> byte <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">(</span>x <span class="Clsr">lsr</span> <span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">*</span>8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cland">land</span> 0xff <span class="Cin">in</span>
<span class="Clinenum"> 146:</span><span class="Cbackground"> </span>    obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>!opos<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>chr byte<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 147:</span><span class="Cbackground"> </span>    incr opos
<span class="Clinenum"> 148:</span><span class="Cbackground"> </span>  <span class="Cdone">done</span>
<span class="Clinenum"> 149:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 150:</span><span class="Cbackground"> </span><span class="Clet">let</span> get32 l <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 151:</span><span class="Cbackground"> </span>  <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>l<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">+</span>
<span class="Clinenum"> 152:</span><span class="Cbackground"> </span>  <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>l<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">*</span> 0x100 <span class="Cnonalphakeyword">+</span>
<span class="Clinenum"> 153:</span><span class="Cbackground"> </span>  <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>l<span class="Cnonalphakeyword">+</span>2<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">*</span> 0x10000 <span class="Cnonalphakeyword">+</span>
<span class="Clinenum"> 154:</span><span class="Cbackground"> </span>  <span class="Cconstructor">Char</span><span class="Cnonalphakeyword">.</span>code obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>l<span class="Cnonalphakeyword">+</span>3<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">*</span> 0x1000000
<span class="Clinenum"> 155:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 156:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> patch rel loc n <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 157:</span><span class="Cbackground"> </span>  <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">&lt;</span> 0x100000000<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 158:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> loc &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 159:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> i <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 160:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> loc' <span class="Cnonalphakeyword">=</span> get32 loc <span class="Cin">in</span>
<span class="Clinenum"> 161:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> x <span class="Cnonalphakeyword">=</span> <span class="Cif">if</span> rel <span class="Cthen">then</span> n <span class="Cnonalphakeyword">-</span> <span class="Cnonalphakeyword">(</span>loc<span class="Cnonalphakeyword">+</span>4<span class="Cnonalphakeyword">)</span> <span class="Celse">else</span> n <span class="Cin">in</span>
<span class="Clinenum"> 162:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !dbg <span class="Cthen">then</span>
<span class="Clinenum"> 163:</span><span class="Cbackground"> </span>      <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>eprintf <span class="Cstring">"patching at %d to %d (n=%d)\n"</span> loc x n<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 164:</span><span class="Cbackground"> </span>    opos <span class="Cnonalphakeyword">:=</span> loc<span class="Cnonalphakeyword">;</span> le 32 x<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 165:</span><span class="Cbackground"> </span>    patch rel loc' n<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 166:</span><span class="Cbackground"> </span>    opos <span class="Cnonalphakeyword">:=</span> i
<span class="Clinenum"> 167:</span><span class="Cbackground"> </span>  <span class="Cend">end</span>
<span class="Clinenum"> 168:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 169:</span><span class="Cbackground"> </span><span class="Clet">let</span> load r n <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 170:</span><span class="Cbackground"> </span>  out <span class="Cnonalphakeyword">(</span>0xb8<span class="Cnonalphakeyword">+</span>r<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> le 32 n
<span class="Clinenum"> 171:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 172:</span><span class="Cbackground"> </span><span class="Clet">let</span> cmp n <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 173:</span><span class="Cbackground"> </span>  load 0 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 174:</span><span class="Cbackground"> </span>  out <span class="Cnonalphakeyword">(</span>0x0f92c0 <span class="Cnonalphakeyword">+</span> <span class="Cnonalphakeyword">(</span>n <span class="Clsl">lsl</span> 8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 175:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 176:</span><span class="Cbackground"> </span><span class="Clet">let</span> test n l <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 177:</span><span class="Cbackground"> </span>  out 0x4885c0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 178:</span><span class="Cbackground"> </span>  out <span class="Cnonalphakeyword">(</span>0x0f84 <span class="Cnonalphakeyword">+</span> n<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 179:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 180:</span><span class="Cbackground"> </span>  le 32 l<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 181:</span><span class="Cbackground"> </span>  loc
<span class="Clinenum"> 182:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 183:</span><span class="Cbackground"> </span><span class="Clet">let</span> align <span class="Cnonalphakeyword">=</span> ref 0
<span class="Clinenum"> 184:</span><span class="Cbackground"> </span><span class="Clet">let</span> push r <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 185:</span><span class="Cbackground"> </span>  incr align<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 186:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> r<span class="Cnonalphakeyword">&lt;</span>8
<span class="Clinenum"> 187:</span><span class="Cbackground"> </span>  <span class="Cthen">then</span> out <span class="Cnonalphakeyword">(</span>0x50<span class="Cnonalphakeyword">+</span>r<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 188:</span><span class="Cbackground"> </span>  <span class="Celse">else</span> out <span class="Cnonalphakeyword">(</span>0x4150<span class="Cnonalphakeyword">+</span>r-8<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 189:</span><span class="Cbackground"> </span><span class="Cand">and</span> pop r <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 190:</span><span class="Cbackground"> </span>  decr align<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 191:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> r<span class="Cnonalphakeyword">&lt;</span>8
<span class="Clinenum"> 192:</span><span class="Cbackground"> </span>  <span class="Cthen">then</span> out <span class="Cnonalphakeyword">(</span>0x58<span class="Cnonalphakeyword">+</span>r<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 193:</span><span class="Cbackground"> </span>  <span class="Celse">else</span> out <span class="Cnonalphakeyword">(</span>0x4158<span class="Cnonalphakeyword">+</span>r-8<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 194:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 195:</span><span class="Cbackground"> </span><span class="Ctype">type</span> lvpatch <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 196:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Mov</span> <span class="Cof">of</span> int
<span class="Clinenum"> 197:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Del</span> <span class="Cof">of</span> int
<span class="Clinenum"> 198:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 199:</span><span class="Cbackground"> </span><span class="Ctype">type</span> lvty <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 200:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Int</span>
<span class="Clinenum"> 201:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Chr</span>
<span class="Clinenum"> 202:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 203:</span><span class="Cbackground"> </span><span class="Clet">let</span> lval <span class="Cnonalphakeyword">=</span> ref <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Mov</span> 0<span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 204:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 205:</span><span class="Cbackground"> </span><span class="Clet">let</span> patchlval <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 206:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span> fst !lval <span class="Cwith">with</span>
<span class="Clinenum"> 207:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Mov</span> n <span class="Cnonalphakeyword">-&gt;</span> obuf<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">[</span>!opos <span class="Cnonalphakeyword">-</span> n<span class="Cnonalphakeyword">]</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cstring">'\x8d'</span>
<span class="Clinenum"> 208:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Del</span> n <span class="Cnonalphakeyword">-&gt;</span> opos <span class="Cnonalphakeyword">:=</span> !opos <span class="Cnonalphakeyword">-</span> n
<span class="Clinenum"> 209:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 210:</span><span class="Cbackground"> </span><span class="Clet">let</span> read <span class="Cnonalphakeyword">=</span> <span class="Cfunction">function</span>
<span class="Clinenum"> 211:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Int</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 212:</span><span class="Cbackground"> </span>    out 0x488b<span class="Cnonalphakeyword">;</span> le 8 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 213:</span><span class="Cbackground"> </span>    lval <span class="Cnonalphakeyword">:=</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Del</span> 3<span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 214:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Chr</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 215:</span><span class="Cbackground"> </span>    out 0x480fb6<span class="Cnonalphakeyword">;</span> le 8 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 216:</span><span class="Cbackground"> </span>    lval <span class="Cnonalphakeyword">:=</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Del</span> 4<span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Chr</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 217:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 218:</span><span class="Cbackground"> </span><span class="Ctype">type</span> globref <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">{</span> loc : int<span class="Cnonalphakeyword">;</span> va : int <span class="Cnonalphakeyword">}</span>
<span class="Clinenum"> 219:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 220:</span><span class="Cbackground"> </span><span class="Clet">let</span> globs <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Array</span><span class="Cnonalphakeyword">.</span>make 100 <span class="Cnonalphakeyword">{</span> loc <span class="Cnonalphakeyword">=</span> 0<span class="Cnonalphakeyword">;</span> va <span class="Cnonalphakeyword">=</span> -1 <span class="Cnonalphakeyword">}</span>
<span class="Clinenum"> 221:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 222:</span><span class="Cbackground"> </span><span class="Clet">let</span> lvls <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">[</span>
<span class="Clinenum"> 223:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"*"</span><span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"/"</span><span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"%"</span><span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 224:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"+"</span><span class="Cnonalphakeyword">,</span> 1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"-"</span><span class="Cnonalphakeyword">,</span> 1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 225:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;&lt;"</span><span class="Cnonalphakeyword">,</span> 2<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;&gt;"</span><span class="Cnonalphakeyword">,</span> 2<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 226:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;"</span><span class="Cnonalphakeyword">,</span> 3<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;="</span><span class="Cnonalphakeyword">,</span> 3<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;"</span><span class="Cnonalphakeyword">,</span> 3<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;="</span><span class="Cnonalphakeyword">,</span> 3<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 227:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"=="</span><span class="Cnonalphakeyword">,</span> 4<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"!="</span><span class="Cnonalphakeyword">,</span> 4<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 228:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&amp;"</span><span class="Cnonalphakeyword">,</span> 5<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 229:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"^"</span><span class="Cnonalphakeyword">,</span> 6<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 230:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"|"</span><span class="Cnonalphakeyword">,</span> 7<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 231:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&amp;&amp;"</span><span class="Cnonalphakeyword">,</span> 8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 232:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"||"</span><span class="Cnonalphakeyword">,</span> 9<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 233:</span><span class="Cbackground"> </span><span class="Cnonalphakeyword">]</span>
<span class="Clinenum"> 234:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 235:</span><span class="Cbackground"> </span><span class="Ctype">type</span> ins <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 236:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Bin</span> <span class="Cof">of</span> int list
<span class="Clinenum"> 237:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Cmp</span> <span class="Cof">of</span> int
<span class="Clinenum"> 238:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 239:</span><span class="Cbackground"> </span><span class="Clet">let</span> inss <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">[</span>
<span class="Clinenum"> 240:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"*"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x480fafc1<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 241:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"/"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4891<span class="Cnonalphakeyword">;</span> 0x4899<span class="Cnonalphakeyword">;</span> 0x48f7f9<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 242:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"%"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4891<span class="Cnonalphakeyword">;</span> 0x4899<span class="Cnonalphakeyword">;</span> 0x48f7f9<span class="Cnonalphakeyword">;</span> 0x4892<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 243:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"+"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4801c8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"-"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4891<span class="Cnonalphakeyword">;</span> 0x4829c8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 244:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;&lt;"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4891<span class="Cnonalphakeyword">;</span> 0x48d3e0<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;&gt;"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4891<span class="Cnonalphakeyword">;</span> 0x48d3f8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 245:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 10<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&lt;="</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 12<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 13<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"&gt;="</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 11<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 246:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"=="</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 2<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"!="</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Cmp</span> 3<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 247:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"&amp;"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4821c8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 248:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"^"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4831c8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 249:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">(</span><span class="Cstring">"|"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Bin</span> <span class="Cnonalphakeyword">[</span>0x4809c8<span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 250:</span><span class="Cbackground"> </span><span class="Cnonalphakeyword">]</span>
<span class="Clinenum"> 251:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 252:</span><span class="Cbackground"> </span><span class="Clet">let</span> tokint   <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"int"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 253:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokchar  <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"char"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 254:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokret   <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"return"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 255:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokif    <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"if"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 256:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokelse  <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"else"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 257:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokwhile <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"while"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 258:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokfor   <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"for"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 259:</span><span class="Cbackground"> </span><span class="Cand">and</span> tokbreak <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Sym</span> <span class="Cnonalphakeyword">(</span>addsym <span class="Cstring">"break"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 260:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 261:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> binary stk lvl <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 262:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> lvl <span class="Cnonalphakeyword">=</span> -1 <span class="Cthen">then</span> unary stk <span class="Celse">else</span>
<span class="Clinenum"> 263:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> lvlof o <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 264:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>mem_assoc o lvls<span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span> -1 <span class="Celse">else</span>
<span class="Clinenum"> 265:</span><span class="Cbackground"> </span>    <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>assoc o lvls <span class="Cin">in</span>
<span class="Clinenum"> 266:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> fold <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 267:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 268:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Op</span> o <span class="Cwhen">when</span> lvlof o <span class="Cnonalphakeyword">=</span> lvl <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 269:</span><span class="Cbackground"> </span>      push 0<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* push %rax            *)</span>
<span class="Clinenum"> 270:</span><span class="Cbackground"> </span>      binary stk <span class="Cnonalphakeyword">(</span>lvl-1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 271:</span><span class="Cbackground"> </span>      pop 1<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* pop %rcx             *)</span>
<span class="Clinenum"> 272:</span><span class="Cbackground"> </span>      <span class="Cbegin">begin</span> <span class="Cmatch">match</span> <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>assoc o inss <span class="Cwith">with</span>
<span class="Clinenum"> 273:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cconstructor">Bin</span> ops <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>iter out ops
<span class="Clinenum"> 274:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cconstructor">Cmp</span> c <span class="Cnonalphakeyword">-&gt;</span> out 0x4839c1<span class="Cnonalphakeyword">;</span> cmp c
<span class="Clinenum"> 275:</span><span class="Cbackground"> </span>      <span class="Cend">end</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 276:</span><span class="Cbackground"> </span>      fold <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 277:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span> unnext t <span class="Cin">in</span>
<span class="Clinenum"> 278:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> foldtst loc <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 279:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 280:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Op</span> o <span class="Cwhen">when</span> lvlof o <span class="Cnonalphakeyword">=</span> lvl <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 281:</span><span class="Cbackground"> </span>      <span class="Clet">let</span> loc' <span class="Cnonalphakeyword">=</span> test <span class="Cnonalphakeyword">(</span>lvl-8<span class="Cnonalphakeyword">)</span> loc <span class="Cin">in</span>
<span class="Clinenum"> 282:</span><span class="Cbackground"> </span>      binary stk <span class="Cnonalphakeyword">(</span>lvl-1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 283:</span><span class="Cbackground"> </span>      foldtst loc'
<span class="Clinenum"> 284:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span> unnext t<span class="Cnonalphakeyword">;</span> loc <span class="Cin">in</span>
<span class="Clinenum"> 285:</span><span class="Cbackground"> </span>  binary stk <span class="Cnonalphakeyword">(</span>lvl-1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 286:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> lvl <span class="Cnonalphakeyword">&lt;</span> 8 <span class="Cthen">then</span> fold <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Celse">else</span>
<span class="Clinenum"> 287:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> foldtst 0 <span class="Cin">in</span>
<span class="Clinenum"> 288:</span><span class="Cbackground"> </span>  patch <span class="Ctrue">true</span> loc !opos
<span class="Clinenum"> 289:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 290:</span><span class="Cbackground"> </span><span class="Cand">and</span> unary stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 291:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 292:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> i <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 293:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>mem_assoc i stk <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 294:</span><span class="Cbackground"> </span>      <span class="Clet">let</span> l <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>assoc i stk <span class="Cin">in</span>
<span class="Clinenum"> 295:</span><span class="Cbackground"> </span>      <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>l <span class="Cnonalphakeyword">&gt;</span> -256<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 296:</span><span class="Cbackground"> </span>      out <span class="Cnonalphakeyword">(</span>0x488b45<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 297:</span><span class="Cbackground"> </span>      out <span class="Cnonalphakeyword">(</span>l <span class="Cland">land</span> 255<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>         <span class="Ccomment">(* mov l(%rbp), %rax    *)</span>
<span class="Clinenum"> 298:</span><span class="Cbackground"> </span>      lval <span class="Cnonalphakeyword">:=</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Mov</span> 3<span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 299:</span><span class="Cbackground"> </span>    <span class="Celse">else</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 300:</span><span class="Cbackground"> </span>      out 0x48b8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 301:</span><span class="Cbackground"> </span>      <span class="Clet">let</span> g <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 302:</span><span class="Cbackground"> </span>      <span class="Cand">and</span> loc <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 303:</span><span class="Cbackground"> </span>      le 64 g<span class="Cnonalphakeyword">.</span>loc<span class="Cnonalphakeyword">;</span>              <span class="Ccomment">(* mov $g.loc, %rax     *)</span>
<span class="Clinenum"> 304:</span><span class="Cbackground"> </span>      globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cnonalphakeyword">{</span> g <span class="Cwith">with</span> loc <span class="Cnonalphakeyword">}</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 305:</span><span class="Cbackground"> </span>      read <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 306:</span><span class="Cbackground"> </span>    postfix stk
<span class="Clinenum"> 307:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">SLit</span> <span class="Cnonalphakeyword">(</span>l<span class="Cnonalphakeyword">,</span> <span class="Cnonalphakeyword">_</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 308:</span><span class="Cbackground"> </span>    out 0x48b8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 309:</span><span class="Cbackground"> </span>    le 64 l                     <span class="Ccomment">(* mov $l, %rax         *)</span>
<span class="Clinenum"> 310:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">ILit</span> i <span class="Cnonalphakeyword">-&gt;</span> load 0 i          <span class="Ccomment">(* mov $i, %eax         *)</span>
<span class="Clinenum"> 311:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"("</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 312:</span><span class="Cbackground"> </span>    expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 313:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* XXX use expect here  *)</span>
<span class="Clinenum"> 314:</span><span class="Cbackground"> </span>    postfix stk
<span class="Clinenum"> 315:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"*"</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 316:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>ty<span class="Cnonalphakeyword">,</span> i<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 317:</span><span class="Cbackground"> </span>      ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 318:</span><span class="Cbackground"> </span>      <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 319:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokint <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 320:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Op</span> <span class="Cstring">"*"</span>
<span class="Clinenum"> 321:</span><span class="Cbackground"> </span>        <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Int</span><span class="Cnonalphakeyword">,</span> 1<span class="Cnonalphakeyword">)</span> <span class="Celse">else</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Int</span><span class="Cnonalphakeyword">,</span> 5<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 322:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokchar <span class="Cnonalphakeyword">-&gt;</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Chr</span><span class="Cnonalphakeyword">,</span> 2<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 323:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> failwith <span class="Cstring">"[cast] expected"</span> <span class="Cin">in</span>
<span class="Clinenum"> 324:</span><span class="Cbackground"> </span>    <span class="Cfor">for</span> k<span class="Cnonalphakeyword">=</span>1 <span class="Cto">to</span> i
<span class="Clinenum"> 325:</span><span class="Cbackground"> </span>      <span class="Cdo">do</span> ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cdone">done</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 326:</span><span class="Cbackground"> </span>    unary stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 327:</span><span class="Cbackground"> </span>    read ty
<span class="Clinenum"> 328:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"&amp;"</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 329:</span><span class="Cbackground"> </span>    unary stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 330:</span><span class="Cbackground"> </span>    patchlval <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 331:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> o <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 332:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> unops <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 333:</span><span class="Cbackground"> </span>      <span class="Cnonalphakeyword">[</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"+"</span><span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 334:</span><span class="Cbackground"> </span>        <span class="Cnonalphakeyword">(</span><span class="Cstring">"-"</span><span class="Cnonalphakeyword">,</span> 0x48f7d8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 335:</span><span class="Cbackground"> </span>        <span class="Cnonalphakeyword">(</span><span class="Cstring">"~"</span><span class="Cnonalphakeyword">,</span> 0x48f7d0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 336:</span><span class="Cbackground"> </span>        <span class="Cnonalphakeyword">(</span><span class="Cstring">"!"</span><span class="Cnonalphakeyword">,</span> 0x4885c0<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum"> 337:</span><span class="Cbackground"> </span>    unary stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 338:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>mem_assoc o unops<span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 339:</span><span class="Cbackground"> </span>      failwith <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>sprintf <span class="Cstring">"unknown operator %s"</span> o<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 340:</span><span class="Cbackground"> </span>    out <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>assoc o unops<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 341:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> o <span class="Cnonalphakeyword">=</span> <span class="Cstring">"!"</span> <span class="Cthen">then</span>
<span class="Clinenum"> 342:</span><span class="Cbackground"> </span>      cmp 2                     <span class="Ccomment">(* setz %al             *)</span>
<span class="Clinenum"> 343:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 344:</span><span class="Cbackground"> </span><span class="Cand">and</span> postfix stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 345:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 346:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cnonalphakeyword">(</span><span class="Cstring">"++"</span> <span class="Cbar">|</span> <span class="Cstring">"--"</span> <span class="Cas">as</span> op<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 347:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> ol <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">[</span>
<span class="Clinenum"> 348:</span><span class="Cbackground"> </span>      <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">(</span><span class="Cstring">"++"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span> 0x48ff01<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>  <span class="Ccomment">(* incq (%rcx)          *)</span>
<span class="Clinenum"> 349:</span><span class="Cbackground"> </span>      <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">(</span><span class="Cstring">"--"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Int</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span> 0x48ff09<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>  <span class="Ccomment">(* decq (%rcx)          *)</span>
<span class="Clinenum"> 350:</span><span class="Cbackground"> </span>      <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">(</span><span class="Cstring">"++"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Chr</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span> 0xfe01<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>    <span class="Ccomment">(* incb (%rcx)          *)</span>
<span class="Clinenum"> 351:</span><span class="Cbackground"> </span>      <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">(</span><span class="Cstring">"--"</span><span class="Cnonalphakeyword">,</span> <span class="Cconstructor">Chr</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">,</span> 0xfe09<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>    <span class="Ccomment">(* decb (%rcx)          *)</span>
<span class="Clinenum"> 352:</span><span class="Cbackground"> </span>    <span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum"> 353:</span><span class="Cbackground"> </span>    patchlval <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 354:</span><span class="Cbackground"> </span>    out 0x4889c1<span class="Cnonalphakeyword">;</span>               <span class="Ccomment">(* mov %rax, %rcx       *)</span>
<span class="Clinenum"> 355:</span><span class="Cbackground"> </span>    read <span class="Cnonalphakeyword">(</span>snd !lval<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 356:</span><span class="Cbackground"> </span>    out <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>assoc <span class="Cnonalphakeyword">(</span>op<span class="Cnonalphakeyword">,</span> snd !lval<span class="Cnonalphakeyword">)</span> ol<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 357:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"("</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 358:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> regs <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">[</span> 7<span class="Cnonalphakeyword">;</span> 6<span class="Cnonalphakeyword">;</span> 2<span class="Cnonalphakeyword">;</span> 1<span class="Cnonalphakeyword">;</span> 8<span class="Cnonalphakeyword">;</span> 9 <span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum"> 359:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Crec">rec</span> emitargs l rl <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 360:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">")"</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 361:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 362:</span><span class="Cbackground"> </span>        <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>iter pop l<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 363:</span><span class="Cbackground"> </span>      <span class="Celse">else</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 364:</span><span class="Cbackground"> </span>        expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 365:</span><span class="Cbackground"> </span>        push 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 366:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">","</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 367:</span><span class="Cbackground"> </span>          ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 368:</span><span class="Cbackground"> </span>        emitargs <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>hd rl <span class="Cnonalphakeyword">::</span> l<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>tl rl<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 369:</span><span class="Cbackground"> </span>    patchlval <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 370:</span><span class="Cbackground"> </span>    push 0<span class="Cnonalphakeyword">;</span>                     <span class="Ccomment">(* push %rax            *)</span>
<span class="Clinenum"> 371:</span><span class="Cbackground"> </span>    emitargs <span class="Cnonalphakeyword">[</span><span class="Cnonalphakeyword">]</span> regs<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 372:</span><span class="Cbackground"> </span>    pop 0<span class="Cnonalphakeyword">;</span>                      <span class="Ccomment">(* pop %rax             *)</span>
<span class="Clinenum"> 373:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !align <span class="Cmod">mod</span> 2 &lt;&gt; 0 <span class="Cthen">then</span>
<span class="Clinenum"> 374:</span><span class="Cbackground"> </span>      out 0x4883ec08<span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* sub 8, %rsp          *)</span>
<span class="Clinenum"> 375:</span><span class="Cbackground"> </span>    out 0xffd0<span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* call *%rax           *)</span>
<span class="Clinenum"> 376:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !align <span class="Cmod">mod</span> 2 &lt;&gt; 0 <span class="Cthen">then</span>
<span class="Clinenum"> 377:</span><span class="Cbackground"> </span>      out 0x4883c408            <span class="Ccomment">(* add 8, %rsp          *)</span>
<span class="Clinenum"> 378:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span> unnext t
<span class="Clinenum"> 379:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 380:</span><span class="Cbackground"> </span><span class="Cand">and</span> expr stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 381:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> eqexpr <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 382:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 383:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"="</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 384:</span><span class="Cbackground"> </span>      patchlval <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 385:</span><span class="Cbackground"> </span>      <span class="Clet">let</span> ty <span class="Cnonalphakeyword">=</span> snd !lval <span class="Cin">in</span>
<span class="Clinenum"> 386:</span><span class="Cbackground"> </span>      push 0<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* push %rax            *)</span>
<span class="Clinenum"> 387:</span><span class="Cbackground"> </span>      expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 388:</span><span class="Cbackground"> </span>      pop 1<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* pop %rcx             *)</span>
<span class="Clinenum"> 389:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> ty <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">Int</span>
<span class="Clinenum"> 390:</span><span class="Cbackground"> </span>      <span class="Cthen">then</span> out 0x488901         <span class="Ccomment">(* mov %rax, (%rcx)     *)</span>
<span class="Clinenum"> 391:</span><span class="Cbackground"> </span>      <span class="Celse">else</span> out 0x8801<span class="Cnonalphakeyword">;</span>          <span class="Ccomment">(* mov %al, (%rcx)      *)</span>
<span class="Clinenum"> 392:</span><span class="Cbackground"> </span>      eqexpr <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 393:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span> unnext t <span class="Cin">in</span>
<span class="Clinenum"> 394:</span><span class="Cbackground"> </span>  binary stk 10<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 395:</span><span class="Cbackground"> </span>  eqexpr <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 396:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 397:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> decl g n stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 398:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 399:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokint <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 400:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> top <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 401:</span><span class="Cbackground"> </span>      <span class="Cmatch">match</span> stk <span class="Cwith">with</span>
<span class="Clinenum"> 402:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">_</span><span class="Cnonalphakeyword">,</span> i<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">::</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> i
<span class="Clinenum"> 403:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> 0 <span class="Cin">in</span>
<span class="Clinenum"> 404:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Crec">rec</span> vars n stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 405:</span><span class="Cbackground"> </span>      <span class="Cwhile">while</span> nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">"*"</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 406:</span><span class="Cbackground"> </span>        <span class="Cdo">do</span> ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cdone">done</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 407:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">";"</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">,</span> stk<span class="Cnonalphakeyword">)</span> <span class="Celse">else</span>
<span class="Clinenum"> 408:</span><span class="Cbackground"> </span>      <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 409:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> s <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 410:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> n' <span class="Cnonalphakeyword">=</span> n <span class="Cnonalphakeyword">+</span> 1 <span class="Cin">in</span>
<span class="Clinenum"> 411:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> stk' <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 412:</span><span class="Cbackground"> </span>          <span class="Cif">if</span> g <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 413:</span><span class="Cbackground"> </span>            <span class="Clet">let</span> glo <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>s<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 414:</span><span class="Cbackground"> </span>            <span class="Cif">if</span> glo<span class="Cnonalphakeyword">.</span>va &gt;= 0 <span class="Cthen">then</span>
<span class="Clinenum"> 415:</span><span class="Cbackground"> </span>              failwith <span class="Cstring">"symbol defined twice"</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 416:</span><span class="Cbackground"> </span>            <span class="Clet">let</span> va <span class="Cnonalphakeyword">=</span> !gpos<span class="Cnonalphakeyword">+</span>textoff <span class="Cnonalphakeyword">+</span> base <span class="Cin">in</span>
<span class="Clinenum"> 417:</span><span class="Cbackground"> </span>            globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>s<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cnonalphakeyword">{</span> glo <span class="Cwith">with</span> va <span class="Cnonalphakeyword">}</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 418:</span><span class="Cbackground"> </span>            gpos <span class="Cnonalphakeyword">:=</span> !gpos <span class="Cnonalphakeyword">+</span> 8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 419:</span><span class="Cbackground"> </span>            stk<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 420:</span><span class="Cbackground"> </span>          <span class="Celse">else</span>
<span class="Clinenum"> 421:</span><span class="Cbackground"> </span>            <span class="Cnonalphakeyword">(</span>s<span class="Cnonalphakeyword">,</span> top <span class="Cnonalphakeyword">-</span> 8<span class="Cnonalphakeyword">*</span>n'<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">::</span> stk <span class="Cin">in</span>
<span class="Clinenum"> 422:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">","</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 423:</span><span class="Cbackground"> </span>        <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>n'<span class="Cnonalphakeyword">,</span> stk'<span class="Cnonalphakeyword">)</span> <span class="Celse">else</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 424:</span><span class="Cbackground"> </span>          ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 425:</span><span class="Cbackground"> </span>          vars n' stk'
<span class="Clinenum"> 426:</span><span class="Cbackground"> </span>        <span class="Cend">end</span>
<span class="Clinenum"> 427:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> failwith <span class="Cstring">"[var] expected in [decl]"</span> <span class="Cin">in</span>
<span class="Clinenum"> 428:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>m<span class="Cnonalphakeyword">,</span> stk'<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> vars 0 stk <span class="Cin">in</span>
<span class="Clinenum"> 429:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 430:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !dbg <span class="Cthen">then</span>
<span class="Clinenum"> 431:</span><span class="Cbackground"> </span>      <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>eprintf <span class="Cstring">"end of decl (%d vars)\n"</span> n<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 432:</span><span class="Cbackground"> </span>    decl g <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>m<span class="Cnonalphakeyword">)</span> stk'
<span class="Clinenum"> 433:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 434:</span><span class="Cbackground"> </span>    unnext t<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 435:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> not g <span class="Cnonalphakeyword">&amp;&amp;</span> n &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 436:</span><span class="Cbackground"> </span>      <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">*</span> 8 <span class="Cnonalphakeyword">&lt;</span> 256<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 437:</span><span class="Cbackground"> </span>      out 0x4883ec<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 438:</span><span class="Cbackground"> </span>      out <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">*</span> 8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>              <span class="Ccomment">(* sub $n*8, %rsp       *)</span>
<span class="Clinenum"> 439:</span><span class="Cbackground"> </span>      align <span class="Cnonalphakeyword">:=</span> !align<span class="Cnonalphakeyword">+</span>n
<span class="Clinenum"> 440:</span><span class="Cbackground"> </span>    <span class="Cend">end</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 441:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !dbg <span class="Cnonalphakeyword">&amp;&amp;</span> not g <span class="Cthen">then</span>
<span class="Clinenum"> 442:</span><span class="Cbackground"> </span>      prerr_endline <span class="Cstring">"end of blk decls"</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 443:</span><span class="Cbackground"> </span>    <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">,</span> stk<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 444:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 445:</span><span class="Cbackground"> </span><span class="Clet">let</span> retl <span class="Cnonalphakeyword">=</span> ref 0
<span class="Clinenum"> 446:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 447:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> stmt brk stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 448:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> pexpr stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 449:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* XXX expect (         *)</span>
<span class="Clinenum"> 450:</span><span class="Cbackground"> </span>    expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 451:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>         <span class="Ccomment">(* XXX expect )         *)</span>
<span class="Clinenum"> 452:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 453:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokif <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 454:</span><span class="Cbackground"> </span>    pexpr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 455:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> test 0 0 <span class="Cin">in</span>
<span class="Clinenum"> 456:</span><span class="Cbackground"> </span>    stmt brk stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 457:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 458:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis tokelse<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 459:</span><span class="Cbackground"> </span>      <span class="Cthen">then</span> loc <span class="Celse">else</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 460:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 461:</span><span class="Cbackground"> </span>        out 0xe9<span class="Cnonalphakeyword">;</span>               <span class="Ccomment">(* jmp                  *)</span>
<span class="Clinenum"> 462:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> l <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 463:</span><span class="Cbackground"> </span>        le 32 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 464:</span><span class="Cbackground"> </span>        patch <span class="Ctrue">true</span> loc !opos<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 465:</span><span class="Cbackground"> </span>        stmt brk stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 466:</span><span class="Cbackground"> </span>        l
<span class="Clinenum"> 467:</span><span class="Cbackground"> </span>      <span class="Cend">end</span> <span class="Cin">in</span>
<span class="Clinenum"> 468:</span><span class="Cbackground"> </span>    patch <span class="Ctrue">true</span> loc !opos
<span class="Clinenum"> 469:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokwhile || t <span class="Cnonalphakeyword">=</span> tokfor <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 470:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>bl<span class="Cnonalphakeyword">,</span> ba<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">(</span>ref 0<span class="Cnonalphakeyword">,</span> !align<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 471:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>bdy<span class="Cnonalphakeyword">,</span> itr<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 472:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> t <span class="Cnonalphakeyword">=</span> tokwhile <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 473:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 474:</span><span class="Cbackground"> </span>        pexpr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 475:</span><span class="Cbackground"> </span>        bl <span class="Cnonalphakeyword">:=</span> test 0 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 476:</span><span class="Cbackground"> </span>        <span class="Cnonalphakeyword">(</span>0<span class="Cnonalphakeyword">,</span> loc<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 477:</span><span class="Cbackground"> </span>      <span class="Celse">else</span> <span class="Cnonalphakeyword">(</span>
<span class="Clinenum"> 478:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 479:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">";"</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 480:</span><span class="Cbackground"> </span>          expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 481:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 482:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> top <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 483:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">";"</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 484:</span><span class="Cbackground"> </span>          expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 485:</span><span class="Cbackground"> </span>          bl <span class="Cnonalphakeyword">:=</span> test 0 0
<span class="Clinenum"> 486:</span><span class="Cbackground"> </span>        <span class="Cend">end</span> <span class="Celse">else</span>
<span class="Clinenum"> 487:</span><span class="Cbackground"> </span>          bl <span class="Cnonalphakeyword">:=</span> 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 488:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 489:</span><span class="Cbackground"> </span>        out 0xe9<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 490:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> bdy <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 491:</span><span class="Cbackground"> </span>        le 32 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 492:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> itr <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 493:</span><span class="Cbackground"> </span>        expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 494:</span><span class="Cbackground"> </span>        ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 495:</span><span class="Cbackground"> </span>        out 0xe9<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 496:</span><span class="Cbackground"> </span>        le 32 <span class="Cnonalphakeyword">(</span>top <span class="Cnonalphakeyword">-</span> !opos <span class="Cnonalphakeyword">-</span> 4<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 497:</span><span class="Cbackground"> </span>        <span class="Cnonalphakeyword">(</span>bdy<span class="Cnonalphakeyword">,</span> itr<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 498:</span><span class="Cbackground"> </span>    patch <span class="Ctrue">true</span> bdy !opos<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 499:</span><span class="Cbackground"> </span>    stmt <span class="Cnonalphakeyword">(</span>bl<span class="Cnonalphakeyword">,</span> ba<span class="Cnonalphakeyword">)</span> stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 500:</span><span class="Cbackground"> </span>    out 0xe9<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* jmp                  *)</span>
<span class="Clinenum"> 501:</span><span class="Cbackground"> </span>    le 32 <span class="Cnonalphakeyword">(</span>itr <span class="Cnonalphakeyword">-</span> !opos <span class="Cnonalphakeyword">-</span> 4<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 502:</span><span class="Cbackground"> </span>    patch <span class="Ctrue">true</span> !bl !opos
<span class="Clinenum"> 503:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokret <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 504:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">";"</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 505:</span><span class="Cbackground"> </span>      expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 506:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* XXX expect here      *)</span>
<span class="Clinenum"> 507:</span><span class="Cbackground"> </span>    out 0xe9<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* jmp                  *)</span>
<span class="Clinenum"> 508:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 509:</span><span class="Cbackground"> </span>    le 32 !retl<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 510:</span><span class="Cbackground"> </span>    retl <span class="Cnonalphakeyword">:=</span> loc
<span class="Clinenum"> 511:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cwhen">when</span> t <span class="Cnonalphakeyword">=</span> tokbreak <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 512:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 513:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>brkl<span class="Cnonalphakeyword">,</span> brka<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> brk <span class="Cin">in</span>
<span class="Clinenum"> 514:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> n <span class="Cnonalphakeyword">=</span> !align <span class="Cnonalphakeyword">-</span> brka <span class="Cin">in</span>
<span class="Clinenum"> 515:</span><span class="Cbackground"> </span>    <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>n &gt;= 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 516:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> n &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 517:</span><span class="Cbackground"> </span>      out 0x4883c4<span class="Cnonalphakeyword">;</span>             <span class="Ccomment">(* add $n*8, %rsp       *)</span>
<span class="Clinenum"> 518:</span><span class="Cbackground"> </span>      out <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">*</span> 8<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 519:</span><span class="Cbackground"> </span>    <span class="Cend">end</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 520:</span><span class="Cbackground"> </span>    out 0xe9<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 521:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> loc <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 522:</span><span class="Cbackground"> </span>    le 32 !brkl<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 523:</span><span class="Cbackground"> </span>    brkl <span class="Cnonalphakeyword">:=</span> loc
<span class="Clinenum"> 524:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"{"</span> <span class="Cnonalphakeyword">-&gt;</span> block brk stk
<span class="Clinenum"> 525:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">";"</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 526:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> t <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 527:</span><span class="Cbackground"> </span>    unnext t<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 528:</span><span class="Cbackground"> </span>    expr stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 529:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>            <span class="Ccomment">(* use expect  XXX      *)</span>
<span class="Clinenum"> 530:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 531:</span><span class="Cbackground"> </span><span class="Cand">and</span> block brk stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 532:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">,</span> stk'<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span> decl <span class="Cfalse">false</span> 0 stk <span class="Cin">in</span>
<span class="Clinenum"> 533:</span><span class="Cbackground"> </span>  <span class="Cwhile">while</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">"}"</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cdo">do</span>
<span class="Clinenum"> 534:</span><span class="Cbackground"> </span>    stmt brk stk'<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 535:</span><span class="Cbackground"> </span>  <span class="Cdone">done</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 536:</span><span class="Cbackground"> </span>  ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 537:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> n &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 538:</span><span class="Cbackground"> </span>    out 0x4883c4<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 539:</span><span class="Cbackground"> </span>    out <span class="Cnonalphakeyword">(</span>n <span class="Cnonalphakeyword">*</span> 8<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>                <span class="Ccomment">(* add $n*8, %rsp       *)</span>
<span class="Clinenum"> 540:</span><span class="Cbackground"> </span>    align <span class="Cnonalphakeyword">:=</span> !align<span class="Cnonalphakeyword">-</span>n
<span class="Clinenum"> 541:</span><span class="Cbackground"> </span>  <span class="Cend">end</span>
<span class="Clinenum"> 542:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 543:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Crec">rec</span> top <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 544:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> not <span class="Cnonalphakeyword">(</span>nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">"EOF!"</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 545:</span><span class="Cbackground"> </span>  <span class="Cif">if</span> nextis tokint
<span class="Clinenum"> 546:</span><span class="Cbackground"> </span>  <span class="Cthen">then</span> <span class="Cnonalphakeyword">(</span>ignore <span class="Cnonalphakeyword">(</span>decl <span class="Ctrue">true</span> 0 <span class="Cnonalphakeyword">[</span><span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> top <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 547:</span><span class="Cbackground"> </span>  <span class="Celse">else</span> <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 548:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> f <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 549:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> g <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>f<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 550:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> g<span class="Cnonalphakeyword">.</span>va &gt;= 0 <span class="Cthen">then</span>
<span class="Clinenum"> 551:</span><span class="Cbackground"> </span>      failwith <span class="Cstring">"symbol defined twice"</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 552:</span><span class="Cbackground"> </span>    globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>f<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cnonalphakeyword">{</span> g <span class="Cwith">with</span> va <span class="Cnonalphakeyword">=</span> !opos <span class="Cnonalphakeyword">}</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 553:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> regs <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">[</span> 7<span class="Cnonalphakeyword">;</span> 6<span class="Cnonalphakeyword">;</span> 2<span class="Cnonalphakeyword">;</span> 1<span class="Cnonalphakeyword">;</span> 8<span class="Cnonalphakeyword">;</span> 9 <span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum"> 554:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Crec">rec</span> emitargs regs n stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 555:</span><span class="Cbackground"> </span>      <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 556:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> i <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 557:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> r <span class="Cnonalphakeyword">=</span> <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>hd regs <span class="Cin">in</span>
<span class="Clinenum"> 558:</span><span class="Cbackground"> </span>        push r<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 559:</span><span class="Cbackground"> </span>        <span class="Cif">if</span> nextis <span class="Cnonalphakeyword">(</span><span class="Cconstructor">Op</span> <span class="Cstring">","</span><span class="Cnonalphakeyword">)</span> <span class="Cthen">then</span>
<span class="Clinenum"> 560:</span><span class="Cbackground"> </span>          ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 561:</span><span class="Cbackground"> </span>        <span class="Clet">let</span> stk' <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">,</span> <span class="Cnonalphakeyword">-</span>n<span class="Cnonalphakeyword">*</span>8<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">::</span> stk <span class="Cin">in</span>
<span class="Clinenum"> 562:</span><span class="Cbackground"> </span>        emitargs <span class="Cnonalphakeyword">(</span><span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>tl regs<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span> stk'
<span class="Clinenum"> 563:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">")"</span> <span class="Cnonalphakeyword">-&gt;</span> stk
<span class="Clinenum"> 564:</span><span class="Cbackground"> </span>      <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> failwith <span class="Cstring">"[var] or ) expected"</span> <span class="Cin">in</span>
<span class="Clinenum"> 565:</span><span class="Cbackground"> </span>    ignore <span class="Cnonalphakeyword">(</span>next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* expect here XXX      *)</span>
<span class="Clinenum"> 566:</span><span class="Cbackground"> </span>    align <span class="Cnonalphakeyword">:=</span> 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 567:</span><span class="Cbackground"> </span>    out 0x55<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* push %rbp  NO push!  *)</span>
<span class="Clinenum"> 568:</span><span class="Cbackground"> </span>    out 0x4889e5<span class="Cnonalphakeyword">;</span>               <span class="Ccomment">(* mov %rsp, %rbp       *)</span>
<span class="Clinenum"> 569:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> stk <span class="Cnonalphakeyword">=</span> emitargs regs 1 <span class="Cnonalphakeyword">[</span><span class="Cnonalphakeyword">]</span> <span class="Cin">in</span>
<span class="Clinenum"> 570:</span><span class="Cbackground"> </span>    <span class="Cwhile">while</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> &lt;&gt; <span class="Cconstructor">Op</span> <span class="Cstring">"{"</span>
<span class="Clinenum"> 571:</span><span class="Cbackground"> </span>      <span class="Cdo">do</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cdone">done</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 572:</span><span class="Cbackground"> </span>    retl <span class="Cnonalphakeyword">:=</span> 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 573:</span><span class="Cbackground"> </span>    block <span class="Cnonalphakeyword">(</span>ref 0<span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span> stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 574:</span><span class="Cbackground"> </span>    patch <span class="Ctrue">true</span> !retl !opos<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 575:</span><span class="Cbackground"> </span>    out 0xc9c3<span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* leave; ret           *)</span>
<span class="Clinenum"> 576:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> !dbg <span class="Cthen">then</span>
<span class="Clinenum"> 577:</span><span class="Cbackground"> </span>      <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>eprintf <span class="Cstring">"done with function %s\n"</span> <span class="Cnonalphakeyword">(</span>symstr f<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 578:</span><span class="Cbackground"> </span>    top <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 579:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span> failwith <span class="Cstring">"[decl] or [fun] expected"</span>
<span class="Clinenum"> 580:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 581:</span><span class="Cbackground"> </span><span class="Clet">let</span> elfhdr <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 582:</span><span class="Cbackground"> </span>  <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>concat <span class="Cstring">""</span>
<span class="Clinenum"> 583:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">[</span> <span class="Cstring">"\x7fELF\x02\x01\x01\x00"</span><span class="Cnonalphakeyword">;</span>  <span class="Ccomment">(* e_ident, 64bits, little endian *)</span>
<span class="Clinenum"> 584:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00\x00\x00\x00\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 585:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x02\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_type, ET_EXEC      *)</span>
<span class="Clinenum"> 586:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x3e\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_machine, EM_X86_64 *)</span>
<span class="Clinenum"> 587:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x01\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span>         <span class="Ccomment">(* e_version, EV_CURRENT*)</span>
<span class="Clinenum"> 588:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00\x00\x00\x00\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* e_entry      *)</span>
<span class="Clinenum"> 589:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x40\x00\x00\x00\x00\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* e_phoff      *)</span>
<span class="Clinenum"> 590:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00\x00\x00\x00\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* e_shoff      *)</span>
<span class="Clinenum"> 591:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00\x00\x00"</span><span class="Cnonalphakeyword">;</span>         <span class="Ccomment">(* e_flags              *)</span>
<span class="Clinenum"> 592:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x40\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_hsize              *)</span>
<span class="Clinenum"> 593:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x38\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_phentsize          *)</span>
<span class="Clinenum"> 594:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x03\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_phnum              *)</span>
<span class="Clinenum"> 595:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x40\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_shentsize          *)</span>
<span class="Clinenum"> 596:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_shnum              *)</span>
<span class="Clinenum"> 597:</span><span class="Cbackground"> </span>    <span class="Cstring">"\x00\x00"</span><span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* e_shstrndx           *)</span>
<span class="Clinenum"> 598:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">]</span>
<span class="Clinenum"> 599:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 600:</span><span class="Cbackground"> </span><span class="Clet">let</span> elfphdr ty off sz align <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 601:</span><span class="Cbackground"> </span>  le 32 ty<span class="Cnonalphakeyword">;</span>                     <span class="Ccomment">(* p_type               *)</span>
<span class="Clinenum"> 602:</span><span class="Cbackground"> </span>  le 32 7<span class="Cnonalphakeyword">;</span>                      <span class="Ccomment">(* p_flags, RWX         *)</span>
<span class="Clinenum"> 603:</span><span class="Cbackground"> </span>  le 64 off<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* p_offset             *)</span>
<span class="Clinenum"> 604:</span><span class="Cbackground"> </span>  le 64 <span class="Cnonalphakeyword">(</span>off <span class="Cnonalphakeyword">+</span> base<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* p_vaddr              *)</span>
<span class="Clinenum"> 605:</span><span class="Cbackground"> </span>  le 64 <span class="Cnonalphakeyword">(</span>off <span class="Cnonalphakeyword">+</span> base<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* p_paddr              *)</span>
<span class="Clinenum"> 606:</span><span class="Cbackground"> </span>  le 64 sz<span class="Cnonalphakeyword">;</span>                     <span class="Ccomment">(* p_filesz             *)</span>
<span class="Clinenum"> 607:</span><span class="Cbackground"> </span>  le 64 sz<span class="Cnonalphakeyword">;</span>                     <span class="Ccomment">(* p_memsz              *)</span>
<span class="Clinenum"> 608:</span><span class="Cbackground"> </span>  le 64 align                   <span class="Ccomment">(* p_align              *)</span>
<span class="Clinenum"> 609:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 610:</span><span class="Cbackground"> </span><span class="Clet">let</span> elfgen outf <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 611:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> entry <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 612:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> main <span class="Cnonalphakeyword">=</span> addsym <span class="Cstring">"main"</span> <span class="Cin">in</span>
<span class="Clinenum"> 613:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> gmain <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>main<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 614:</span><span class="Cbackground"> </span>  out 0x488b3c24<span class="Cnonalphakeyword">;</span>               <span class="Ccomment">(* mov (%rsp), %rdi     *)</span>
<span class="Clinenum"> 615:</span><span class="Cbackground"> </span>  out 0x488d742408<span class="Cnonalphakeyword">;</span>             <span class="Ccomment">(* lea 8(%rsp), %rsi    *)</span>
<span class="Clinenum"> 616:</span><span class="Cbackground"> </span>  out 0x48b8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 617:</span><span class="Cbackground"> </span>  le 64 gmain<span class="Cnonalphakeyword">.</span>loc<span class="Cnonalphakeyword">;</span>              <span class="Ccomment">(* mov main, %rax       *)</span>
<span class="Clinenum"> 618:</span><span class="Cbackground"> </span>  globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>main<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">&lt;-</span> <span class="Cnonalphakeyword">{</span> gmain <span class="Cwith">with</span> loc <span class="Cnonalphakeyword">=</span> !opos-8 <span class="Cnonalphakeyword">}</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 619:</span><span class="Cbackground"> </span>  out 0xffd0<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* call *%rax           *)</span>
<span class="Clinenum"> 620:</span><span class="Cbackground"> </span>  out 0x89c7<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* mov %eax, %edi       *)</span>
<span class="Clinenum"> 621:</span><span class="Cbackground"> </span>  load 0 0x3c<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 622:</span><span class="Cbackground"> </span>  out 0x0f05<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* syscall              *)</span>
<span class="Clinenum"> 623:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> off <span class="Cnonalphakeyword">=</span> textoff <span class="Cnonalphakeyword">+</span> !gpos <span class="Cin">in</span>
<span class="Clinenum"> 624:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> itr f <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 625:</span><span class="Cbackground"> </span>    symitr <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> i s <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 626:</span><span class="Cbackground"> </span>      <span class="Clet">let</span> g <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 627:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> g<span class="Cnonalphakeyword">.</span>va <span class="Cnonalphakeyword">&lt;</span> 0 <span class="Cnonalphakeyword">&amp;&amp;</span> g<span class="Cnonalphakeyword">.</span>loc &lt;&gt; 0 <span class="Cthen">then</span>
<span class="Clinenum"> 628:</span><span class="Cbackground"> </span>        f s <span class="Cnonalphakeyword">(</span><span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>length s<span class="Cnonalphakeyword">)</span> g<span class="Cnonalphakeyword">.</span>loc<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 629:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> va x <span class="Cnonalphakeyword">=</span> x<span class="Cnonalphakeyword">+</span>off <span class="Cnonalphakeyword">+</span> base <span class="Cin">in</span>
<span class="Clinenum"> 630:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> patchloc i <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 631:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> g <span class="Cnonalphakeyword">=</span> globs<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>i<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 632:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> g<span class="Cnonalphakeyword">.</span>va &gt;= 0 <span class="Cnonalphakeyword">&amp;&amp;</span> g<span class="Cnonalphakeyword">.</span>va <span class="Cnonalphakeyword">&lt;</span> base <span class="Cthen">then</span>
<span class="Clinenum"> 633:</span><span class="Cbackground"> </span>      patch <span class="Cfalse">false</span> g<span class="Cnonalphakeyword">.</span>loc <span class="Cnonalphakeyword">(</span>va g<span class="Cnonalphakeyword">.</span>va<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 634:</span><span class="Cbackground"> </span>    <span class="Celse">else</span> <span class="Cif">if</span> g<span class="Cnonalphakeyword">.</span>va &gt;= 0 <span class="Cthen">then</span>
<span class="Clinenum"> 635:</span><span class="Cbackground"> </span>      patch <span class="Cfalse">false</span> g<span class="Cnonalphakeyword">.</span>loc g<span class="Cnonalphakeyword">.</span>va <span class="Cin">in</span>
<span class="Clinenum"> 636:</span><span class="Cbackground"> </span>  symitr patchloc<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 637:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> strtab <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 638:</span><span class="Cbackground"> </span>  incr opos<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* initial 0            *)</span>
<span class="Clinenum"> 639:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> dl <span class="Cnonalphakeyword">=</span> <span class="Cstring">"/lib64/ld-linux-x86-64.so.2\x00libc.so.6"</span>
<span class="Clinenum"> 640:</span><span class="Cbackground"> </span>  <span class="Cand">and</span> dllen <span class="Cnonalphakeyword">=</span> 27<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">+</span>9 <span class="Cin">in</span>
<span class="Clinenum"> 641:</span><span class="Cbackground"> </span>  <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>blit dl 0 obuf !opos dllen<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 642:</span><span class="Cbackground"> </span>  opos <span class="Cnonalphakeyword">:=</span> !opos <span class="Cnonalphakeyword">+</span> dllen<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 643:</span><span class="Cbackground"> </span>  itr <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> s sl <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 644:</span><span class="Cbackground"> </span>    <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>blit s 0 obuf !opos sl<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 645:</span><span class="Cbackground"> </span>    opos <span class="Cnonalphakeyword">:=</span> !opos <span class="Cnonalphakeyword">+</span> sl<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 646:</span><span class="Cbackground"> </span>  opos <span class="Cnonalphakeyword">:=</span> <span class="Cnonalphakeyword">(</span>!opos <span class="Cnonalphakeyword">+</span> 7<span class="Cnonalphakeyword">)</span> <span class="Cland">land</span> -8<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 647:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> symtab <span class="Cnonalphakeyword">=</span> !opos
<span class="Clinenum"> 648:</span><span class="Cbackground"> </span>  <span class="Cand">and</span> n <span class="Cnonalphakeyword">=</span> ref <span class="Cnonalphakeyword">(</span>dllen<span class="Cnonalphakeyword">+</span>2<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 649:</span><span class="Cbackground"> </span>  opos <span class="Cnonalphakeyword">:=</span> !opos <span class="Cnonalphakeyword">+</span> 24<span class="Cnonalphakeyword">;</span>           <span class="Ccomment">(* first is reserved    *)</span>
<span class="Clinenum"> 650:</span><span class="Cbackground"> </span>  itr <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> <span class="Cnonalphakeyword">_</span> sl <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 651:</span><span class="Cbackground"> </span>    le 32 !n<span class="Cnonalphakeyword">;</span>                   <span class="Ccomment">(* st_name              *)</span>
<span class="Clinenum"> 652:</span><span class="Cbackground"> </span>    le 32 0x10<span class="Cnonalphakeyword">;</span>                 <span class="Ccomment">(* global | notype      *)</span>
<span class="Clinenum"> 653:</span><span class="Cbackground"> </span>    le 64 0<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* st_value             *)</span>
<span class="Clinenum"> 654:</span><span class="Cbackground"> </span>    le 64 0<span class="Cnonalphakeyword">;</span>                    <span class="Ccomment">(* st_size              *)</span>
<span class="Clinenum"> 655:</span><span class="Cbackground"> </span>    n <span class="Cnonalphakeyword">:=</span> !n <span class="Cnonalphakeyword">+</span> sl<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 656:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> rel <span class="Cnonalphakeyword">=</span> !opos
<span class="Clinenum"> 657:</span><span class="Cbackground"> </span>  <span class="Cand">and</span> n <span class="Cnonalphakeyword">=</span> ref 1 <span class="Cin">in</span>
<span class="Clinenum"> 658:</span><span class="Cbackground"> </span>  itr <span class="Cnonalphakeyword">(</span><span class="Cfun">fun</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">_</span> l <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 659:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> <span class="Crec">rec</span> genrel l <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 660:</span><span class="Cbackground"> </span>      <span class="Cif">if</span> l &lt;&gt; 0 <span class="Cthen">then</span> <span class="Cbegin">begin</span>
<span class="Clinenum"> 661:</span><span class="Cbackground"> </span>        le 64 <span class="Cnonalphakeyword">(</span>va l<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 662:</span><span class="Cbackground"> </span>        le 64 <span class="Cnonalphakeyword">(</span>1 <span class="Cnonalphakeyword">+</span> !n <span class="Clsl">lsl</span> 32<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>  <span class="Ccomment">(* R_X86_64_64          *)</span>
<span class="Clinenum"> 663:</span><span class="Cbackground"> </span>        le 64 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 664:</span><span class="Cbackground"> </span>        genrel <span class="Cnonalphakeyword">(</span>get32 l<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 665:</span><span class="Cbackground"> </span>      <span class="Cend">end</span> <span class="Cin">in</span>
<span class="Clinenum"> 666:</span><span class="Cbackground"> </span>    genrel l<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 667:</span><span class="Cbackground"> </span>    incr n<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 668:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> hash <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 669:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> n <span class="Cnonalphakeyword">=</span> <span class="Cnonalphakeyword">(</span>rel<span class="Cnonalphakeyword">-</span>symtab<span class="Cnonalphakeyword">)</span>/24 <span class="Cnonalphakeyword">-</span> 1 <span class="Cin">in</span>
<span class="Clinenum"> 670:</span><span class="Cbackground"> </span>  le 32 1<span class="Cnonalphakeyword">;</span>                      <span class="Ccomment">(* nbucket              *)</span>
<span class="Clinenum"> 671:</span><span class="Cbackground"> </span>  le 32 <span class="Cnonalphakeyword">(</span>n<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>                  <span class="Ccomment">(* nchain               *)</span>
<span class="Clinenum"> 672:</span><span class="Cbackground"> </span>  le 32 <span class="Cnonalphakeyword">(</span><span class="Cif">if</span> n<span class="Cnonalphakeyword">&gt;</span>0 <span class="Cthen">then</span> 1 <span class="Celse">else</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 673:</span><span class="Cbackground"> </span>  <span class="Cfor">for</span> i<span class="Cnonalphakeyword">=</span>1 <span class="Cto">to</span> n <span class="Cdo">do</span>
<span class="Clinenum"> 674:</span><span class="Cbackground"> </span>    le 32 i
<span class="Clinenum"> 675:</span><span class="Cbackground"> </span>  <span class="Cdone">done</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 676:</span><span class="Cbackground"> </span>  le 32 0<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 677:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> dyn <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 678:</span><span class="Cbackground"> </span>  <span class="Cconstructor">List</span><span class="Cnonalphakeyword">.</span>iter <span class="Cnonalphakeyword">(</span>le 64<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">[</span>
<span class="Clinenum"> 679:</span><span class="Cbackground"> </span>    1<span class="Cnonalphakeyword">;</span> 29<span class="Cnonalphakeyword">;</span>                      <span class="Ccomment">(* DT_NEEDED libc.so.6  *)</span>
<span class="Clinenum"> 680:</span><span class="Cbackground"> </span>    4<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>va hash<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>               <span class="Ccomment">(* DT_HASH              *)</span>
<span class="Clinenum"> 681:</span><span class="Cbackground"> </span>    5<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>va strtab<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>             <span class="Ccomment">(* DT_STRTAB            *)</span>
<span class="Clinenum"> 682:</span><span class="Cbackground"> </span>    6<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>va symtab<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>             <span class="Ccomment">(* DT_SYMTAB            *)</span>
<span class="Clinenum"> 683:</span><span class="Cbackground"> </span>    7<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>va rel<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>                <span class="Ccomment">(* DT_RELA              *)</span>
<span class="Clinenum"> 684:</span><span class="Cbackground"> </span>    8<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>hash<span class="Cnonalphakeyword">-</span>rel<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>              <span class="Ccomment">(* DT_RELASZ            *)</span>
<span class="Clinenum"> 685:</span><span class="Cbackground"> </span>    9<span class="Cnonalphakeyword">;</span> 24<span class="Cnonalphakeyword">;</span>                      <span class="Ccomment">(* DT_RELAENT           *)</span>
<span class="Clinenum"> 686:</span><span class="Cbackground"> </span>    10<span class="Cnonalphakeyword">;</span> <span class="Cnonalphakeyword">(</span>symtab<span class="Cnonalphakeyword">-</span>strtab<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>        <span class="Ccomment">(* DT_STRSZ             *)</span>
<span class="Clinenum"> 687:</span><span class="Cbackground"> </span>    11<span class="Cnonalphakeyword">;</span> 24<span class="Cnonalphakeyword">;</span>                     <span class="Ccomment">(* DT_SYMENT            *)</span>
<span class="Clinenum"> 688:</span><span class="Cbackground"> </span>    0<span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* 0; *)</span>                 <span class="Ccomment">(* DT_NULL              *)</span>
<span class="Clinenum"> 689:</span><span class="Cbackground"> </span>  <span class="Cnonalphakeyword">]</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 690:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> tend <span class="Cnonalphakeyword">=</span> !opos <span class="Cin">in</span>
<span class="Clinenum"> 691:</span><span class="Cbackground"> </span>  <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>blit obuf 0 obuf off tend<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 692:</span><span class="Cbackground"> </span>  <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>blit glo 0 obuf textoff !gpos<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 693:</span><span class="Cbackground"> </span>  <span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>blit elfhdr 0 obuf 0 64<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 694:</span><span class="Cbackground"> </span>  opos <span class="Cnonalphakeyword">:=</span> 64<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 695:</span><span class="Cbackground"> </span>  elfphdr 3 <span class="Cnonalphakeyword">(</span>strtab<span class="Cnonalphakeyword">+</span>1<span class="Cnonalphakeyword">+</span>off<span class="Cnonalphakeyword">)</span> 28 1<span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* PT_INTERP           *)</span>
<span class="Clinenum"> 696:</span><span class="Cbackground"> </span>  elfphdr 1 0 <span class="Cnonalphakeyword">(</span>tend<span class="Cnonalphakeyword">+</span>off<span class="Cnonalphakeyword">)</span> 0x200000<span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* PT_LOAD           *)</span>
<span class="Clinenum"> 697:</span><span class="Cbackground"> </span>  elfphdr 2 <span class="Cnonalphakeyword">(</span>dyn<span class="Cnonalphakeyword">+</span>off<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">(</span>tend<span class="Cnonalphakeyword">-</span>dyn<span class="Cnonalphakeyword">)</span> 8<span class="Cnonalphakeyword">;</span> <span class="Ccomment">(* PT_DYNAMIC       *)</span>
<span class="Clinenum"> 698:</span><span class="Cbackground"> </span>  <span class="Cassert">assert</span> <span class="Cnonalphakeyword">(</span>!opos <span class="Cnonalphakeyword">=</span> textoff<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 699:</span><span class="Cbackground"> </span>  patch <span class="Cfalse">false</span> 24 <span class="Cnonalphakeyword">(</span>va entry<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 700:</span><span class="Cbackground"> </span>  output_string outf <span class="Cnonalphakeyword">(</span><span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>sub obuf 0 <span class="Cnonalphakeyword">(</span>tend<span class="Cnonalphakeyword">+</span>off<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 701:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 702:</span><span class="Cbackground"> </span><span class="Clet">let</span> main <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 703:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> doone c stk <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 704:</span><span class="Cbackground"> </span>    opos <span class="Cnonalphakeyword">:=</span> 0<span class="Cnonalphakeyword">;</span> c stk<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 705:</span><span class="Cbackground"> </span>    print_string <span class="Cnonalphakeyword">(</span><span class="Cconstructor">String</span><span class="Cnonalphakeyword">.</span>sub obuf 0 !opos<span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 706:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> ppsym <span class="Cnonalphakeyword">=</span> <span class="Cfunction">function</span>
<span class="Clinenum"> 707:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Op</span> s <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>printf <span class="Cstring">"Operator '%s'\n"</span> s
<span class="Clinenum"> 708:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">ILit</span> i <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>printf <span class="Cstring">"Int literal %d\n"</span> i
<span class="Clinenum"> 709:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">SLit</span> <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">_</span><span class="Cnonalphakeyword">,</span> s<span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>printf <span class="Cstring">"Str literal %S\n"</span> s
<span class="Clinenum"> 710:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Sym</span> i <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>printf <span class="Cstring">"Symbol '%s' (%d)\n"</span> <span class="Cnonalphakeyword">(</span>symstr i<span class="Cnonalphakeyword">)</span> i <span class="Cin">in</span>
<span class="Clinenum"> 711:</span><span class="Cbackground"> </span>  <span class="Clet">let</span> <span class="Crec">rec</span> pptoks <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">=</span>
<span class="Clinenum"> 712:</span><span class="Cbackground"> </span>    <span class="Cmatch">match</span> next <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cwith">with</span>
<span class="Clinenum"> 713:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> <span class="Cconstructor">Op</span> <span class="Cstring">"EOF!"</span> <span class="Cnonalphakeyword">-&gt;</span> <span class="Cconstructor">Printf</span><span class="Cnonalphakeyword">.</span>printf <span class="Cstring">"End of input stream\n"</span>
<span class="Clinenum"> 714:</span><span class="Cbackground"> </span>    <span class="Cbar">|</span> tok <span class="Cnonalphakeyword">-&gt;</span> ppsym tok<span class="Cnonalphakeyword">;</span> pptoks <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span> <span class="Cin">in</span>
<span class="Clinenum"> 715:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 716:</span><span class="Cbackground"> </span>  <span class="Cmatch">match</span>
<span class="Clinenum"> 717:</span><span class="Cbackground"> </span>    <span class="Cif">if</span> <span class="Cconstructor">Array</span><span class="Cnonalphakeyword">.</span>length <span class="Cconstructor">Sys</span><span class="Cnonalphakeyword">.</span>argv <span class="Cnonalphakeyword">&lt;</span> 2
<span class="Clinenum"> 718:</span><span class="Cbackground"> </span>    <span class="Cthen">then</span> <span class="Cstring">"-blk"</span> <span class="Celse">else</span> <span class="Cconstructor">Sys</span><span class="Cnonalphakeyword">.</span>argv<span class="Cnonalphakeyword">.</span><span class="Cnonalphakeyword">(</span>1<span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 719:</span><span class="Cbackground"> </span>  <span class="Cwith">with</span>
<span class="Clinenum"> 720:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cstring">"-lex"</span> <span class="Cnonalphakeyword">-&gt;</span> pptoks <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
<span class="Clinenum"> 721:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> <span class="Cstring">"-blk"</span> <span class="Cnonalphakeyword">-&gt;</span> doone <span class="Cnonalphakeyword">(</span>block <span class="Cnonalphakeyword">(</span>ref 0<span class="Cnonalphakeyword">,</span> 0<span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">)</span> <span class="Cnonalphakeyword">[</span><span class="Cnonalphakeyword">]</span>
<span class="Clinenum"> 722:</span><span class="Cbackground"> </span>  <span class="Cbar">|</span> f <span class="Cnonalphakeyword">-&gt;</span>
<span class="Clinenum"> 723:</span><span class="Cbackground"> </span>    <span class="Clet">let</span> oc <span class="Cnonalphakeyword">=</span> open_out <span class="Cstring">"out"</span> <span class="Cin">in</span>
<span class="Clinenum"> 724:</span><span class="Cbackground"> </span>    inch <span class="Cnonalphakeyword">:=</span> open_in f<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 725:</span><span class="Cbackground"> </span>    top <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span><span class="Cnonalphakeyword">;</span> elfgen oc<span class="Cnonalphakeyword">;</span>
<span class="Clinenum"> 726:</span><span class="Cbackground"> </span>    close_out oc
<span class="Clinenum"> 727:</span><span class="Cbackground"> </span>
<span class="Clinenum"> 728:</span><span class="Cbackground"> </span><span class="Clet">let</span> <span class="Cnonalphakeyword">_</span> <span class="Cnonalphakeyword">=</span> main <span class="Cnonalphakeyword">(</span><span class="Cnonalphakeyword">)</span>
</pre>

<hr>
<p>
<em>This document was generated using 
<a href="http://martin.jambon.free.fr/caml2html.html">caml2html</a></em>
</body>
</html>
