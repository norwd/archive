<script type="text/javascript">
  var disqus_identifier = "appleTechTalk2009";
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="iPhone 3D, Apple TechTalk 2009 openGL ES 1.1, openGL ES 2.0, tips"/>
		<meta name="Description" content="Apple iPhone TechTalk 2009 report"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Apple iPhone TechTalk 2009 Tricks</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       December 3th, 2009</div>
   <h1>Apple iPhone TechTalk 2009 Tricks</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="appleTechTalk2009.jpg"" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         
	<style>
table { width:100%; a:link:color:rgb(0, 136, 204);}
table thead { background:transparent; }
table th { white-space:nowrap; }
table thead th { border-left:1px solid #ccc;  border-top:1px solid #ccc; padding:9px 9px 3px; color:#999; }
table tbody th,
table tbody td { border-top:1px solid #ccc; padding:6px 9px; }
table tbody th { padding:7px 0 7px 0; text-align:center; color:#999; }
table tbody th b { color:#333; font-weight:normal; }

table tbody td { border-left:1px solid #ccc; width:182px; }
table.col3 tbody td { width:248px; }
table.col2 tbody td { width:382px; }
table tbody .session { background:#d4e6fa url(session_bgblue.png) repeat-x 0 0; }
table tbody .session.alt { background:#e9ecf0 url(session_bggray.png) repeat-x 0 0; }
table tbody .session h3 { font-size:1em; margin-bottom:0; color:rgb(0, 136, 204); }
table tbody .session .hud-content { display:none; }

div .box { padding:0 25px; width:850px; background:#f7f7f7 url(box_bg.gif) repeat-y 0 0; }
	</style>

				Today I took a day off from work to attend the iPhone Apple Tech Talk 2009 in Toronto. I learned a few cool things and thought I should share it with the two lost developers that may stumble upon this page. I haven't had time to test and verify all of this so as usual: Do your own testing and trust nobody!		
			<div style="clear:both;"></div>
			</p>


<h3>Talks availables</h3>
<p>

The agenda was as follows:<br/>
<br/>
<table cellspacing="0" cellpadding="0" border="0">
<thead>
	<tr>
		<th>Room A</th>
		<th>Room B</th>
		<th>Room C</th>
		<th style="border-right:1px solid #ccc;">Room D</th>
	</tr>
</thead>
<tbody>
<tr>
<td class="session"> Effective iPhone App Development - Part 1</td>
<td class="session alt" >Audio Development Tips for iPhone</td>
<td class="session" >iPhone User Interface Design Essentials</td>
<td class="session alt" rowspan="9" style="text-align:center;  border-right:1px solid #ccc;  border-bottom:1px solid #ccc;">Technical Q&A</td>
</tr>
<tr><td colspan="3" class="session alt" style="text-align:center;"><b>Break</b></td></tr>
<tr>
<td class="session">Effective iPhone App Development - Part 2</td>
<td class="session alt">Preparing and Delivering Video for iPhone</td>
<td class="session">Adding In App Purchase to your App</td>
</tr>
<tr><td colspan="3" class="session alt" style="text-align:center;"><b>Break</b></td></tr>
<tr>
<td class="session">Working with Core Data</td>
<td class="session alt">Mastering OpenGL ES for iPhone - Part 1</td>
<td class="session">Integrating Web Content into iPhone Apps</td>
</tr>
<tr><td colspan="3" class="session alt" style="text-align:center;"><b>Break</b></td></tr>
<tr>
<td class="session">Testing and Debugging Your iPhone Application</td>
<td class="session alt">Mastering OpenGL ES for iPhone - Part 2</td>
<td class="session">Finding Your Way with Location and Maps</td>
</tr>
<tr><td colspan="3" class="session alt" style="text-align:center;"><b>Break</b></td></tr>
<tr >
<td style="border-bottom:1px solid #ccc;" class="session">Maximizing iPhone App Performance</td>
<td style="border-bottom:1px solid #ccc;" class="session alt">Networking: From Sockets to GameKit</td>
<td style="border-bottom:1px solid #ccc;" class="session" >Implementing Push Notification</td>
</tr>
</tbody>
</table>

			<br/>
<br/>
I conveniently stuck to Room B where of course I attended the two openGL sessions, hosted by Allan Schaffer (Graphics & Media Evangelist).
</p>

<h3>Degenerated GL_TRIANGLE_STRIP trick</h3>

<p id="paperbox">

Here is a nice trick to fight bandwidth consumption. GL_TRIANGLE_STRIP is the primitive offering the best ratio in terms of faces/vertices. In the following example, 8 vertices allow to generate 6 faces: ABCDEFGH<br/>
<br/>
<img style="margin-right:auto; margin-left:auto; display:block;" src="StripTrick.jpg"/><br/>
<br/>
<br/>
But at first sight, there is no way to draw discontinued shapes. If you want to render something like this:<br/><br/>
<img style="margin-right:auto; margin-left:auto; display:block;" src="StripTrick2.jpg"/><br/>
<br/>
<br/>
In this situation you may go for:<br/>
<ul>
	<li>2 drawing calls using GL_TRIANGLE_STRIP : ABCD and EFGH, sending 8 vertices.</li>
	<li>1 drawing call using GL_TRIANGLES: ABC BDC EFB FGH, sending 12 vertices.</li>
</ul>
<br/>
<p>
But you can actually have best of both worlds: 1 drawing call using GL_TRIANGLE_STRIP and sending 10 vertices via degenerated faces:<br/>
<br/>
ABCD DE EFGH
<br/>
<br/>
The duplicated vertices D and F will result in 4 linefaces that will be discarded by the GPU ! <a href="glutDegenerated.c">Here is a GLUT example </a>.
</p>





<h3>Thumb 2.0</h3>
<p>
Thumb 1.0 is infamous in the world of 3D for not having floating point capability and is hence a pig for ARMv6 architectures. ARMv7 devices now support Thumb 2.0 instruction set which have floating point capability. Smaller instructions are better for the CPU cache, it is hence recommended to enable it on ARMv7 (iPhone 3GS an iTouch 3d generation).<br/>
<br/>
It is not really trivial to build a fat binary which disables Thumb 1.0 for ARMv6 and enables Thumb 2.0 for ARMv7 so here are the steps:<br/>
<br/>
First enable fat binary generation.<br/>
<br/><img style="margin-right:auto; margin-left:auto; display:block;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="fatBinary.jpg"/><br/>
<br/>
By default there is only one "Thumb" checkbox available!<br/>
<br/><img style="margin-right:auto; margin-left:auto; display:block;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="problem.jpg"/><br/>
<br/>
The solution is to use "Add building Setting Condition" at the lower left corner of the build panel.<br/>
<br/><img style="margin-right:auto; margin-left:auto; display:block;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="addBuildSetting.jpg"/><br/>
<br/>You end up building a fat binary that will be standard ARM 32 bits for armv6 but Thumb 2.0 for armv7.<br/>
<br/><img style="margin-right:auto; margin-left:auto; display:block;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="finalFat.jpg"/><br/>
<br/>
This is "supposed" to be faster on ARMv7.
<h3>Bandwidth is not your friend</h3>
<p>
Allan confirmed that it is actually very hard to get bottlenecked by the GPU's vertices capabilities (not talking about fillrate of course). Most of the time the memory bandwidth will be the bottleneck. So keep on packing, normalizing and compressing guys.

<h3>Data alignment</h3>
<p>
One thing I did not know is that MBX/SGX chips are 4 bytes aligned and every time you send an array of vertices, the driver will copy the data but may repad it to make sure it is properly aligned for the GPU.<br/>
<br/>
<pre  class="long">

	//Don't do 

	typedef struct
	{ 
		short pos[3]; 
		short normal[3]; 
		short textUV[2]; 
	} 
	vertex_t ; 

	//But instead pre-pad like this: 

	typedef struct
	{ 
		short pos[4]; 
		short normal[4]; 
		short textUV[4]; 
	} 
	vertex_t ;  

 
</pre>

<p>

It doesn't really make sense to me because whether you declare an array of size 4 with C, the stride you declare later with the GL vertex/normal/texture pointers will hide it from the GPU anyway. I thought that maybe the GPU/driver could perform a batch <code>memcpy</code> if the data were properly aligned but then we increase the bandwidth consumption and the slight improvement is lost.<br/>
<br/>
Again, I will have to do more testing in this regard but I welcome any input on this.<br/>
<br/>
</p>

<br/>

<h3>VBO ?</h3>

<p id="paperbox">
VBO have been a fairly controversial topic in the iPhone world. They were recommended since iPhone 2G even though they provided no speed gain. When the 3GS got released Daniel Pasco from Black Pixel Luminance published <a href="http://blackpixel.com/blog/399/iphone-vertex-buffer-object-performance/">some benchmark results</a> which turned out to be very disappointing although Walter Rawdanik from warmi.net had much encouraging results.<br/>
<br/>
During the conference, Apple recommended the usage again and after some testing I found a huge increase in perfs, I recommend to use them along with <code>glMapBuffer</code>.
</p>

<h3>Mipmapping to reduce bandwidth consumption</h3>

<p id="paperbox">
Another optimization I never thought of was to use mipMapping. At first you may think that trilinear interpolation will consume more bandwidth but it won't if it's setup to use the nearest mipmap, it will only consume more memory storage.<br/>
<pre  class="long">


	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST_MIPMAP_NEAREST);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

	//or if you want to perform bilinear filtering

	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_NEAREST);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

	glTexParameterf(GL_TEXTURE_2D,GL_GENERATE_MIPMAP, GL_TRUE);

	glTexImage2D(..) ;


</pre>

<p>
This should save some bandwidth.
</p>

<h3>Tiles and Defered rendering</h3>

<p id="paperbox">
There were a few great slides reminding us to think in terms of tiles and Deferred Rendering. It's faily expensive to change the layout of the tiles in the middle of a frame so avoid changing the viewport or the spencil / scissor.<br/>
<br/>

</p>

<h3>RGB -> RGBA </h3>

<p id="paperbox">
Don't bother too much about saving memory by loading as GL_RGB: These textures are loaded and converted to RGBA with A=1 on the GPU side :( !<br/><br/>
There were a few things about texture preloading and warming (some operations on textures are deferred until you use them, drawing one pixel actually gets the texture "ready"), it is recommended not to do the preloading and warming in <code>didFinishLoading</code> delegate (kinda obvious)...because we only have 5 seconds here (I did not know this).
</p>



<h3>Q&A fail</h3>

<p id="paperbox">
I had a few questions and was eager to talk to some "much more clever than me" Apple engineers about OpenGL. So I tried to go to the Lab (Room 4) but it seems only Allan knew about OpenGL :/ !<br/>
I tried to ask a few questions to Allan between the two conferences. I wanted to know why iPhones ES implementation doesn't support render to depth texture <code>GL_OES_depth_texture</code> and why we did not have floating point (yes, it would help my Variance Shadow Mapping to be decent). They seemed like legitimate questions to me as it appears the hardware is capable. He told me he had no idea and that I should ask an Apple engineer :/.<br/>
<br/>
I also asked him how realistic it was to expect dedicated VRAM on iPHone/iTouch in the next 2 years. He didn't know.<br/>
<br/>
Allan seemed like a sharp guy, I wonder if he dodged it voluntarily or if I just misunderstood what Apple meant by "evangelist" (no sarcasm here).<br/>
<br/>

</p>

<h3>CADisplayLink is the future</h3>

<p id="paperbox">
Stop using NSTimer with two threads spaghetti design (as I mentioned in my Doom for Iphone code review), use CADisplayLink from 3.1 and fallback to NSTimer dual thread for earlier versions.
</p>


<h3>T-Shirt !</h3>

<p id="paperbox">	
	Overall the talk was a great time, the catering was excellent (geez didn't know a veggie sandwich could taste that good !!). I even got a cool looking T-shirt "I came, I saw, I Coded" !<br/>
<br/>
	<img style="margin-right:auto; margin-left:auto; display:block;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="photo.jpg"/>

<p>
On the downside, I did not see ONE girl over there (well I only realized this when my girlfriend asked if they were any), it's a bit sad to go to an event and know that it's going to be a big sausage fest.
</p>


<h3>Recommended reading</h3>

<p id="paperbox">
Not really Apple or iPhone related but it's what I've been reading recently: "Linkers and Loaders" by John R. Levine and "The Art of Multiprocessor Programming" by Maurice Herlihy and Nir Shavit : I highly recommend both of them.<br/><br/>
<table border="0">
<tr  >
<th style="border-top:0px"> 
<a href="http://www.amazon.com/Linkers-Kaufmann-Software-Engineering-Programming/dp/1558604960/ref=sr_1_1?ie=UTF8&s=books&qid=1260044448&sr=8-1" margin : 5px;"><img src="LinkerLoader.jpg"/></a></td>
<th style="border-top:0px">
<a href="http://www.amazon.com/Art-Multiprocessor-Programming-Maurice-Herlihy/dp/0123705916/ref=sr_1_1?ie=UTF8&s=books&qid=1260044536&sr=1-1#" margin : 5px;"><img src="ArtMultiProg.jpg"/></a></td>
</th>
</tr>
</table>

<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>

