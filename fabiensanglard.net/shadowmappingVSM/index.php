<script type="text/javascript">
  var disqus_identifier = "shadowmappingVSM";
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="shadow map, shadowmapping, openGL, GLUT, c++, GLSL, Shaders, VSM, Variance Shadow Mapping"/>
		<meta name="Description" content="ShadowMapping tutorial"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Tunnel Java oldschool</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       February 14th, 2009</div>
   <h1>Softshadow with GLUT,GLSL and VSM</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="softerShadowIcon.jpg" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         		When I got started learning openGL Shading Language, the "Orange Book" was a great resource, but I thought it lacked code samples. Here is a modest cross platform implementation of Variance shadow mapping.<br/> 
		<br/>
		For further explanation about VSM, checkou the original <a href="http://www.punkuser.net/vsm/">paper</a> by William Donnelly and Andrew Lauritzen and also the books referenced at the bottom of this page.<br/>
		<br/>
				My goal was to provide something easy to compile, on Windows, MacOS and Linux. That's why the entire source is one .c file (+6 shaders) coded in ANSI C. Crossplatform window managment is performed via GLUT. I did not use GLEW to ensure Microsoft Windows portability, again this is for ease of compilation.<br/>
				
		</p>

		<h3>Source</h3>
		<p>
				<a href="main.c">main.c</a><br/>
				<a href="StoreDepthVertexShader.c">StoreDepthVertexShader.c</a><br/>
				<a href="StoreDepthFragmentShader.c">StoreDepthFragmentShader.c</a><br/>
				<a href="BlurVertexShader.c">BlurVertexShader.c</a><br/>
				<a href="BlurFragmentShader.c">BlurFragmentShader.c</a><br/>
				<a href="VertexShader.c">VertexShader.c</a><br/>
				<a href="FragmentShader.c">FragmentShader.c</a><br/>
				
				<br/>
				<a href="vsmShadow.zip">Zipped pack</a><br/>
				<br/>
				<u>Win32 and macOS X Binaries:</u><br/>
				<br/>
				<a href="ReleaseVSMWin32.zip"><img src="../images/Windows.png"/></a><br/>
				<u>Note:</u> Due to a Macos X bug with GLUT (relative path is lost an set to "/" when the app starts), I cannot distribute the binary. Running the sample in XCode is fine.
				<br/>
				 
			</p>




			
			<h3>Variance Shadow Mapping
			</h3>
				<p id="paperbox">			
					The main issue with PCF Shadow Mapping is that values generated in the depth buffer cannot be filtered with hardware (except for <code>GL_LINEAR</code> on nVidia). The workaround was to use PCF and do software filtering in the shader  ;  Performance hit is massive.<br/>
					Variance Shadow Mapping address this issue relying on a chebyshev probabilist prediction. Chebyshev probability prediction rely on mean and "variance", that's why this method is called VSM.<br/> The approach is changed: In the way depth informations are stored and in the way shadow/penumbra information is retrieved. The benefict of these changes is that we can then use all the power of hardware GPU filtering: From bilinear to mippaping, anisotropic and even gaussian glur filtering.
					<br/>
					<br/>
					So what is changing ?<br/>
					<br/>
					First we now store two informations: depth and depth*depth into a color FBO, preferably with 32 bits floating precision.<br/>
					<br/>
					Second, in order to determine if a fragment is in shadow or not, we use chebyshev's formula in order to determine the probability of a fragment to be shadowed. This probability is very handy because it also generate free penumbra.
				</p>
			
			<br/>
			<h3>Code explanation
			</h3>
				<p id="paperbox">
					First the easy part: Storing depth and depth*depth. This is done is a first pass with a specific shader.<br/>
					<br/>
					<u>Vertex shader</u>
				</p>
				
					
					<pre  class="long">
					
	varying vec4 v_position;

	void main()
	{
			gl_Position = ftransform();
			v_position = gl_Position;
	}						
	
	
</pre>
				
				<br/><br/>
				<p id="paperbox">
				
					The fragment shader is not very complicated either. The only fancy part is the way we bias the depth information usig partial derivative. Don't worry if you don't get this part, it's mostly to avoid surface acne (self-shadowing).
					This shader would be much more complicated if we had no 32 bits precision FBO. With a 16 bits floating point texture, values would have to be packed in the four components.
				</p>
				
				<pre  class="long">
	varying vec4 v_position;
	
	void main()
	{
		float depth = v_position.z / v_position.w ;
		depth = depth * 0.5 + 0.5;			//Don't forget to move away from unit cube ([-1,1]) to [0,1] coordinate system
	
		float moment1 = depth;
		float moment2 = depth * depth;
	
		// Adjusting moments (this is sort of bias per pixel) using partial derivative
		float dx = dFdx(depth);
		float dy = dFdy(depth);
		moment2 += 0.25*(dx*dx+dy*dy) ;
		
	
		gl_FragColor = vec4( moment1,moment2, 0.0, 0.0 );
	}				
				</pre>
				
				<br/>
				<p id="paperbox">
					I won't talk about the Gaussian Blur, it's just a standard filtering, with a ping-pong FBO.The goal is to blur the shadow.<br/>
					Now the real beef of VSM is to determine if a fragment is in shadow.<br/>
					<br/>
					<u>Vertex shader</u>
				</p>
				
					<pre  class="long">
					
					
	// Used for shadow lookup
	varying vec4 ShadowCoord;
	
	void main()
	{
	     	ShadowCoord= gl_TextureMatrix[7] * gl_Vertex;
			gl_Position = ftransform();
			gl_FrontColor = gl_Color;
	}
					
					</pre>
				
				<p id="paperbox">
					<br/>
					<u>Fragment shader</u>
				</p>
				
<pre  class="long">				
	uniform sampler2D ShadowMap;
	
	varying vec4 ShadowCoord;
	
	vec4 ShadowCoordPostW;
	
	float chebyshevUpperBound( float distance)
	{
		// We retrive the two moments previously stored (depth and depth*depth)
		vec2 moments = texture2D(ShadowMap,ShadowCoordPostW.xy).rg;
		
		// Surface is fully lit. as the current fragment is before the light occluder
		if (distance <= moments.x)
			return 1.0 ;
	
		// The fragment is either in shadow or penumbra. We now use chebyshev's upperBound to check
		// How likely this pixel is to be lit (p_max)
		float variance = moments.y - (moments.x*moments.x);
		variance = max(variance,0.00002);
	
		float d = distance - moments.x;
		float p_max = variance / (variance + d*d);
	
		return p_max;
	}
	
	
	void main()
	{	
		ShadowCoordPostW = ShadowCoord / ShadowCoord.w;
		//ShadowCoordPostW = ShadowCoordPostW * 0.5 + 0.5; This is done via a bias matrix in main.c
	
		float shadow = chebyshevUpperBound(ShadowCoordPostW.z);
	
		gl_FragColor = vec4(shadow ) *gl_Color;
	  
	}


</pre>
			<p>
				<br/>
			</p>







			<h3>Results</h3>
			
			<p id="paperbox">
				Even with partial derivative adjustment, selfshadowing still occurs if we render frontface during the shadowmap generation pass:<br/><br/>
				<img src="selfShadowing.jpg" style="display:inline;"/>&nbsp;<img src="final.jpg" style="display:inline;"/>
				<br/><br/>
				Cull <code>GL_FRONT</code> as usual solve this issue:<br/>
				<br/>
				</br>
				<img src="final2.jpg"/>
				<br/>
			</p>				
			


<h3>Tuning</h3>
		
<p id="paperbox">

Depending on plenty of factors, you may not get a good looking result:<br/>
<br/>
				<img src="badUpperLimit.jpg"/>
<br/>
<p>
In this case, try to go with a different max value for sampling:<br/>
<br/>
<pre  class="long">

	variance = max(variance,0.002);

</pre> 
<p>
</p>

			

			<h3>Recommended books</h3>
			
				<p id="paperbox">
					Here are two books I recommend if you want to learn more about Variance Shadow Mapping:<br/>
					<br/>
					<br/>
					<a href="http://www.amazon.ca/Real-Time-Rendering-Akenine-Moller/dp/1568814240/ref=sr_1_1?ie=UTF8&s=books&qid=1233937854&sr=1-1" ><img src="../books/realTime.jpg" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				
					<a href="http://www.amazon.ca/GPU-Gems-Programming-High-Performance-General-Purpose/dp/0321335597/ref=sr_1_1?ie=UTF8&s=books&qid=1234594942&sr=8-1" ><img src="../books/gpugems2.jpg" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				
	<a href="http://www.amazon.com/Real-Time-Shadows-Elmar-Eisemann/dp/1568814380/ref=sr_1_1?ie=UTF8&qid=1391105083&sr=8-1&keywords=real+time+shadow" ><img src="../books/trs.png" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				
					
				

				</p>


<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>


