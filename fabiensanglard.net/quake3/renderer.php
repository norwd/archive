<script type="text/javascript">
  var disqus_identifier = "quake3" ;
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="Quake 3 Source Code Review, id tech3, Quake Live Source Code Review"/>
		<meta name="Description" content="Quake 3 Source Code Review, Quake Live Source Code Review"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Quake 3 Source Code Review: Renderer</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       June 30, 2012</div>
   <h1>Quake 3 Source Code Review: Renderer (Part 2 of 5) <a href="network.php">>></h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="quake3_icon.jpg" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         The Quake III renderer is an evolution of the Quake II hardware accelerated renderer: The classic part is that it
is built on a "Binary Partition"/"Potential Visible Set" architecture but two new key aspects are noticeable:
<ul>
    <li>A Shader system built on top of the OpenGL 1.X fixed pipeline. This was quite an accomplishment in 1999. It provided
    a lot of space for innovation in an era before the now ubiquitous vertex,geometry and fragment shaders.
        </li>
    <li>Support for multicore architecture: The OpenGL client/server model is blocking on some methods and a system of threads partially 
       eliminates this issue. </li>
</ul>
<br/>
<div style="clear:both;"></div>
<br/>

<h3>Architecture</h3>
<p id="paperbox">
The renderer is entirely contained in <code>renderer.lib</code> and statically linked against <code>quake3.exe</code>:
<br/>
<br/>
<img style="margin-left: auto; margin-right: auto; display: block; width: 833px ; height: 594px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/q3_renderer.png">
<br/>
The renderer overall architecure is the Quake Classic: It relies on the famous BSP/PVS/Lightmap combo:<br/>
<ul>
    <li>Preprocessing:</li>
    <ol>
        <li>The game designer create and save a .map using QRadiant.</li>
    	<li>q3bsp.exe slices the map via Binary Space Partitioning. I wrote about this in <a href="../quakeSource/quakeSourceRendition.php">Quake1 renderer review</a>.</li>
    	<li>Out of the BSP a portal system is generated: I wrote about this in <a href="../doom3/dmap.php">Doom3 Dmap tool</a>.</li>
    	<li><code>q3vis.exe</code> uses the portal system and generates a PVS (Potentially Visible Set) for each leave. Each PVS is compressed and stored 
    	in a bsp file as I described it in <a href="../quake2/quake2_software_renderer.php">a previous article</a>.</li>
    	<li>The portal system is discarded.</li>	
    	<li><code>q3light.exe</code> calculate all illuminations for each polygon in the map and store the result as lightmap textures in the bsp file.</li>
    	<li>At this point all the preprocessing (PVSs and Lightmaps) is stored in the .bsp file.
    </ol>	
    <li>Runtime:</li>
    <ol>
    	<li>The engine loads the map and the bsp.</li>
    	<li>When rendition is requested:</li>
    	<li>The engine decompress the PVS for the current leave and determine was is <u>actually</u> visible.</li>
    	<li>For each polygon it combines the lightmap with the color via multitexturing.</li>
    </ol>	
</ul>
<p>
The multitexturing and lightmap step is clearly visible when the engine is modified to display only one or the other:</br>
<br/>
The texture drawn by the level designer/artists:<br/>
<img style="box-shadow: #777 3px 3px 3px;margin-left: auto; margin-right: auto; display: block; width: 1024px ; height: 768px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/shot0002.jpg"><br/>

<br/>
The lightmap generated by <code>q3light.exe</code> : <br/>
<img style="box-shadow: #777 3px 3px 3px;margin-left: auto; margin-right: auto; display: block; width: 1024px ; height: 768px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/shot0001.jpg"><br/>

<br/>
The final result when combined at runtime via multi-texturing :<br/>
<img style="box-shadow: #777 3px 3px 3px;margin-left: auto; margin-right: auto; display: block; width: 1024px ; height: 768px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/shot0000.jpg"><br/>

<br/>

The rendering architecture was discussed by Brian Hook at the <a href="https://archive.org/details/branhook_gdc_1999_videoplayback">1999 Game Developer Conference</a>. 


</p>












<h3>Shaders</h3>
<p id="paperbox">
The shader system is build on top of OpenGL 1.X fixed pipeline and is hence very costy. Developers can program vertex modifications but also add texture passes. 
This is detailled in
the Quake 3 Shader bible:<br/>

<a  href="../fd_proxy/quake3/Q3&#32;Shaders.pdf"><img style="margin-left: auto; margin-right: auto; display: block;" src="../fd_proxy/quake3/adobe_pdf_icon128.png"></a>

</p>













<h3>Multicore Renderer and SMP (Symmetric multiprocessing)</h3>
<p id="paperbox">
Unknown to a lot of people: Quake III Arena shipped with <a href="http://en.wikipedia.org/wiki/Symmetric_multiprocessing">SMP</a> support via <code>
r_smp</code> cvariable. The frontend and the backend communicate via a standard Producer/Consumer design. When <code>r_smp</code> is set to 1 
drawing surfaces are alternatively stored in a double buffer located in RAM. The frontend (that is called <b>Main thread</b> in this example)
alternatively write to one of the buffer while the other is read by the backend (called <b>Renderer thread</b> in this example).<br/>
<br/>
 An example to illustrate how things are working:</br>
</br>
<u>From t0 to t1 :</u>
<ul>
 <li>The Main thread decides what to draw and write surfaces to the surfacebuffer1.</li>
 <li>The Renderer thread is starving and hence locked.</li>
 <li>The GPU thread is also doing nothing.</li> 
</ul>
<p>
</br>
<img style="margin-left: auto; margin-right: auto; display: block; width: 920px ; height: 377px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/T0-T1.png"><br/>
</br><br/><br/>
<u>From t1 to t2 :</u> Things start to move all over the place:
<ul>
 <li>The Main thread is deciding what is visible for next frame. It writes surface to surfacebuffer2: This is a typical example of Double Buffering.</li>
 <li>Meanwhile, the Renderer thread makes OpenGL call and patiently wait until the GPU thread has copied everything in a secure space.</li>
 <li>The GPU thread read the surface from where the Renderer thread is pointing to.</li> 
</ul>
<p>
<br/>
Note that at t2:
<ul>
   <li>Renderer thread is still transferring data to the GPU: SurfaceBuffer1 is in use.</li>
   <li>Main thread is done writing to SurfaceBuffer2...but cannot start writing to SurfaceBuffer1: It is locked</li>
</ul>
<p> This case (where the Renderer thread is locking the Main thread is actually the most common while playing Quake III: 
It illustrate the blocking limitation of some of the method in the OpenGL API.
</br>
<img style="margin-left: auto; margin-right: auto; display: block; width: 920px ; height: 377px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/T1-T2.png"><br/>
</br><br/><br/>
<u>After t2 :</u>
<ul>
 <li>As soon as the Renderer thread is done with SurfaceBuffer1 (t3) it starts pumping surfaces from SurfaceBuffer2.</li>
 <li>As soon as it is unlocked (at t3), the Main thread starts working on next frame, writing to SurfaceBuffer1.</li>
 <li>The GPU is almost never idle with this configuration.</li> 
</ul>
<p>
</br>
<img style="margin-left: auto; margin-right: auto; display: block; width: 920px ; height: 377px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/quake3/T2-T3.png"><br/>
</br>
<u><b>Note :</b></u> The synchronization is performed via 
<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms686915(v=vs.85).aspx">Windows Event Objects</a> 
	in <a href="https://github.com/id-Software/Quake-III-Arena/blob/master/code/win32/win_glimp.c">winglimp.c</a> (SMP acceleration section at bottom).
</p>

</p>





<h3>Next part</h3>
<p id="paperbox">

<a href="network.php">The Network Model</a>
</p>


			
	<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>

