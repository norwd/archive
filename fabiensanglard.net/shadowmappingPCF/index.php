<script type="text/javascript">
  var disqus_identifier = "shadowmappingPCF";
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="shadow map, shadowmapping, openGL, GLUT, c++, GLSL, Shaders, Percentage Closer Filteting, PCF"/>
		<meta name="Description" content="ShadowMapping tutorial"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Softshadow with GLUT,GLSL and PCF</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       February 14th, 2009</div>
   <h1>Soft shadows with PCF</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="softerShadowIcon.jpg" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         		When I got started learning openGL Shading Language, the "Orange Book" was a great resource, but I thought it lacked code samples. Here is a modest cross platform implementation of shadow mapping with Percentage Closer Filtering..<br/>
		<br/>
				My goal was to provide something easy to compile, on Windows, MacOS and Linux. That's why the entire source is one .c file (+2 shaders) coded in ANSI C. Crossplatform window managment is performed via GLUT. I did not use GLEW to ensure Microsoft Windows portability, again this is for ease of compilation.<br/>
			</p>
			<div style="clear:both;"></div>

			<h3>Source</h3>
				<p>

				<a href="main.c">main.c</a><br/>
				<a href="VertexShader.c">VertexShader.glsl</a><br/>
				<a href="FragmentShader.c">FragmentShader.glsl</a><br/>
				<br/>
				<a href="shadowmappingPCF.zip">Zipped pack</a><br/>
				<br/>
				<u>Win32 and macOS X Binaries:</u><br/>
				<br/>
				<a href="ShadowMappingBinaryWin32.zip"><img src="../images/Windows.png"/></a><br/>
				<u>Note:</u> Due to a Macos X bug with GLUT (relative path is lost an set to "/" when the app starts), I cannot distribute the binary. Running the sample in XCode is fine.
				<br/>
				
			</p>
			






			<h3>Percentage closer Filtering
			</h3>
				<p id="paperbox">			
					Percentage closer Filtering is a step forward soft shadows, but don't expect a huge increase of quality without a serious drop of performances.<br/><br/>
					The method is quite simple: Instead of taking one sample in order to determine if a fragment is in the shadow or not, we take "several" (the set of sample is called "Kernel" ) and average them.
					The result is a penumbra zone and an attenuation of the aliasing. The bigger the kernel, the bigger the penumbra.<br/>
					<br/>
					After experimentations, I found PCF to be a massive waste of GPU ressources. As the kernel sampling has to be done for every fragment, the shader end up doing a lot of sampling operations in order to achieve a gain in a small portion of the screen. Moreover, the performance hit is huge if you try to generate penumbra with an 8x8 or bigger kernel, <a href="../shadowmappingVSM/index.html">Variance Shadow Mapping</a> is a much better approach.<br/>
				</p>
			
			




			<h3>Code explanation
			</h3>
			<p id="paperbox">	
				The vertex shader doesn't change at all:
			</p>
			
				<pre  class="long">
				
				
	// Used for shadow lookup
	varying vec4 ShadowCoord;

	void main()
	{
		ShadowCoord= gl_TextureMatrix[7] * gl_Vertex;
  
		gl_Position = ftransform();

		gl_FrontColor = gl_Color;
	}
	
	
				</pre>
			</p>		
			<br/>	
			<p id="paperbox">	
				The fragment shader feature a new lookup function: <code>lookup</code>. The following code sample features 16 pixels kernel, you will find a lot more kernel types in the actual code. There is no more "W divide", as we now use the "shadow2DProj" sampler.<br/>
				The GLSL sampler <code>shadow2DProj</code> is supposed to be better than <code>texture2DProj</code> on Nvidia hardware, used with a <code>GL_LINEAR</code> filter, we get a "free" 4 pixel sample. Tests showed a neat improvement (see screenshots).
			</p>
			
				<pre  class="long">


	uniform sampler2DShadow ShadowMap;
	
	varying vec4 ShadowCoord;
	
	// This define the value to move one pixel left or right
	uniform float xPixelOffset ;
	
	// This define the value to move one pixel up or down
	uniform float yPixelOffset ;
	
	float lookup( vec2 offSet)
	{
		// Values are multiplied by ShadowCoord.w because shadow2DProj does a W division for us.
		return shadow2DProj(ShadowMap, ShadowCoord + 
		                               vec4(offSet.x * xPixelOffset * ShadowCoord.w, 
		                                    offSet.y * yPixelOffset * ShadowCoord.w, 
		                                    0.05, 
		                                    0.0) ).w;
	}
	
	void main()
	{		
		float shadow ;
		
		// Avoid counter shadow
		if (ShadowCoord.w > 1.0)
		{
			float x,y;
			for (y = -1.5 ; y <=1.5 ; y+=1.0)
				for (x = -1.5 ; x <=1.5 ; x+=1.0)
					shadow += lookup(vec2(x,y));
			
			shadow /= 16.0 ;
	
		}
	  	gl_FragColor =	  (shadow+0.2) * gl_Color;
	  
	}

				</pre>
						
			<br/>
			<p id="paperbox">	
				The main program get's a few modifications as well. We now use the <code>shadow2DProj</code> sampler, we also need to se the <code>GL_TEXTURE_COMPARE_MODE</code>.
			</p>
			<br/>
			
				<pre  class="long">
				
				
	// GL_LINEAR does not make sense for depth texture. However, next tutorial shows usage of GL_LINEAR and PCF. Using GL_NEAREST
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
	
	// This is to allow usage of shadow2DProj function in the shader
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_COMPARE_MODE, GL_COMPARE_R_TO_TEXTURE);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_COMPARE_FUNC, GL_LEQUAL);
	glTexParameteri(GL_TEXTURE_2D, GL_DEPTH_TEXTURE_MODE, GL_INTENSITY); 				
	
	
				</pre>
				<p>
	</p>		




			<h3>Results:
			</h3>
			<p id="paperbox">	
				Regular shadowmap<br/><br/>
				<img src="simpleShadowMap.jpg" style="display:block;" /><br/><br/>
				<img src="simpleShadowMapZOOM.jpg" style="display:inline;" /><img src="simpleShadowMap_nVidiaZOOM.jpg" style="display:inline;" />
				<br/><br/><br/>
				Percentage Closer Filtering 16 pixels kernel:<br/><br/>
				<img src="4x4kernel_nVidia.jpg" /><br/><br/>
				<img src="4x4kernelZOOM.jpg" style="display:inline;" /><img src="4x4kernel_nVidiaZOOM.jpg" style="display:inline;" />
				<br/><br/><br/>
				Percentage Closer Filtering 64 pixels kernel:<br/><br/>
					<img src="8x8kernel_nVidia.jpg" /><br/><br/>
				<img src="4x4kernelZOOM.jpg" style="display:inline;" /><img src="8x8kernel_nVidiaZOOM.jpg" style="display:inline;" />
				<br/><br/><br/>
				Percentage Closer Filtering 4 pixels kernel, dithered:<br/><br/>
					<img src="dithered_nVidia.jpg" /><br/><br/>
				<img src="ditheredZOOM.jpg" style="display:inline;" /><img src="dithered_nVidiaZOOM.jpg" style="display:inline;" />
				
				
				
				
			
			</p>
			
			
			<h3>Recommended books</h3>
			
				<p id="paperbox">
					Here are two books I recommend if you want to learn more about Percentage Closer Filtering:<br/>
					<br/>
					<br/>
					<a href="http://www.amazon.ca/Real-Time-Rendering-Akenine-Moller/dp/1568814240/ref=sr_1_1?ie=UTF8&s=books&qid=1233937854&sr=1-1" ><img src="../books/realTime.jpg" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				
					<a href="http://www.amazon.ca/GPU-Gems-Programming-Techniques-Real-Time/dp/0321228324/ref=sr_1_3?ie=UTF8&qid=1233938603&sr=1-3" ><img src="../books/gpugems1.jpg" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				
	<a href="http://www.amazon.com/Real-Time-Shadows-Elmar-Eisemann/dp/1568814380/ref=sr_1_1?ie=UTF8&qid=1391105083&sr=8-1&keywords=real+time+shadow" ><img src="../books/trs.png" style="margin-right:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;"/></a>
				

				</p>
				





<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>

