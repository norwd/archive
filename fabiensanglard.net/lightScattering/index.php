<script type="text/javascript">
  var disqus_identifier = "lightScattering";
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="c++,openGL, Binary Space partition, Light scattering, Realtime, FBO, GLSL"/>
		<meta name="Description" content="Light scattering effect with openGL and GLSL"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Light scattering with openGL shader</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       November 25th, 2008</div>
   <h1>Light scattering with openGL</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="LightScattering.jpg" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         


This article is based on [Mitchell] publication which uses DirectX. In the following, 
I describe and provide an openGL implementation of the technique allowing realtime light scattering effect (god's ray).
<div style="clear:both;"></div>
</p>


			<h3>Source code and video</h3>
			
			<p id="paperbox">	
					 	
				<object style="float:right;margin-left:15px; " width="425" height="344">
					<param name="movie" value="https://www.youtube.com/v/TJdQlV2JXIg&hl=en&fs=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="https://www.youtube.com/v/TJdQlV2JXIg&hl=en&fs=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
				

<ul>
		<li>		<a title="Mac Version" href="macos.zip">Mac Binary</a> </li>
			<li>	<a title="Windows version" href="win32.zip">Windows Binary</a></li>
			<li>	<a title="Source code" href="src.zip">Source Code</a><br/></li>
	</ul>
	<p>

				Binaries and sources available for Mac and Windows. You will need GLUT, SDL and SDL_image to compile under XCode or Visual Studio Express.<br/>
				<br/>
				
						Usage:<br/>	
							<ul>
								<li>Move with arrow keys.</li>
								<li>Look with the mouse.</li>
								<li>Pause with space</li>
								<li>Exposure can be modified via W and S keys.</li>
								<li>Decay can be modified via E and D keys.</li>
								<li>Weight can be modified via R and F keys.</li>
								<li>Density can be modified via T and G keys.</li>
								<li>FBO size...you will have to recompile ;) !</li>
							</ul>
						</td>
						<td>
							
						</td>
					</tr>
				</table>
			</p>
			
			<br/>
			<h3>Overview
			</h3>
			<p id="paperbox">
<p >

				Pros:<br/>
				<ul>
					<li>Easy to setup.</li>
					<li>Gorgeous result.</li>
				</ul>
			</p><p>	
				Cons:<br/>
				<ul>
					<li>Consum a lot of fragment horse power, especially with a high # of samples.</li>
					<li>Cannot re-use the precomputation to cast Shadows (like in [Mitchell2]).</li>
				</ul>
				
			</p>
			
			<br/>
			<h3>High level description
			</h3>
			<p id="paperbox">
				The best description is by Kenny  Mitchell in GPU Gems 3 but while you wait for your Amazon delivery, here is a  little bit more informations: It's a 2D post-processing effect including three stages :<br/>
				<br/>
				<ol>	
				<li>Render offscreen with a FBO: the light source and the occluding objects, no shaders involved here. In order to save cycles, you can render to a lower resolution (factor 2 gives good results) and
				disable texturing/depth testing.</li>
				<li>Clean the depth buffer, render the scene normally to the framebuffer.</li>
				<li>Switch to Orthogonal projection and blend the FBO with the framebuffer, activating the shader in order to generate the "God's ray" effect .</li> 
				<br/>
					<img style="display:block;margin-left:auto;margin-right:auto;" src="flow.GIF" />
				<br/>
				</ol>
			</p>
			
			<br/>
			<h3>High resolution screenshots
			</h3>
			
			<p id="paperbox">
				
				
				<a href="tutorial1LightAndOccluder.JPG" style="float : left; margin : 5px;" >
						    <img style="box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="tutorial1LightAndOccluderThumb.jpg" alt="Highslide JS"title="Click to enlarge"   />
					
				</a>
					
				<a href="tutorial2NormalRendered.JPG" style="float : left; margin : 5px;">
					
						    <img src="tutorial2NormalRenderedThumb.jpg" alt="Highslide JS"title="Click to enlarge"   />
					
				</a>
				
				
				
				<a href="tutorial2LightScattering.JPG" style="float : left; margin : 5px;">
					
						    <img style="box-shadow: rgb(119, 119, 119) 3px 3px 3px;"  src="tutorial2LightScatteringThumb.jpg" alt="Highslide JS"title="Click to enlarge"   />
					
				</a>
				
				
				<a href="tutorial3FinalResult.JPG" style="float : left; margin : 5px;">
					
						    <img style="box-shadow: rgb(119, 119, 119) 3px 3px 3px;"  src="tutorial3FinalResultThumb.jpg" alt="Highslide JS"title="Click to enlarge"   />
					
				</a>
				<div style="clear:both;"></div>
			</p>
			
        	<h3>Low level description
			</h3>
			<p id="paperbox">
				The keystone of the process is the shader which compute the final color by taking sample along the segment [current fragment - light position].<br/>
				One way to do this is to calculate light position in screenspace on the CPU side and pass these value as an uniform variable. Two ways to do this:<br/>
				<ul>
					<li>You can use the <a href="http://www.opengl.org/documentation/specs/man_pages/hardcopy/GL/html/glu/project.html">gluProject</a> method.</li>
					<li>"Manually", with the following <a href="screen_space_coordinate.txt">code</a>:<br/><br/>
			</p>
			
					</li>
					
				</ul> 
<p>
Note: Of course the best would be to keep all the transformation matrix in the CPU instead of calling glGetDoublev. This means give up on GLU mmethods such as gluPerspective, glOrtho and gluLookAt...I will write an article about this later.
			</p>
			
			
			<br/>
			<h3>The fragment shader
			</h3>

			<p id="paperbox">
				The keystone as aforementionned, notice the NUM_SAMPLES const, the more sample taken, the less aliasing...and the more load on the GPU shaders units.
			A lot of variables can be tuned to adjust the effect:
				<ul> 
					<li>Number of samples: The more the merrier.</li>
					<li>Decay</li>
					<li>Density</li>
					<li>Weight</li>
					<li>Exposure</li>
					<li>Occluding object FBO rendering resolution (firstPass texture resolution)</li>
				</ul> 
			</p>
<br/>
			<p id="codebox">
								<pre class="long">


    uniform float exposure;
    uniform float decay;
    uniform float density;
    uniform float weight;
    uniform vec2 lightPositionOnScreen;
    uniform sampler2D firstPass;
    const int NUM_SAMPLES = 100 ;

    void main()
    {	
    	vec2 deltaTextCoord = vec2( gl_TexCoord[0].st - lightPositionOnScreen.xy );
    	vec2 textCoo = gl_TexCoord[0].st;
    	deltaTextCoord *= 1.0 /  float(NUM_SAMPLES) * density;
    	float illuminationDecay = 1.0;
	
	
    	for(int i=0; i &lt; NUM_SAMPLES ; i++)
        {
                 textCoo -= deltaTextCoord;
                 vec4 sample = texture2D(firstPass, textCoo );
			
                 sample *= illuminationDecay * weight;

                 gl_FragColor += sample;

                 illuminationDecay *= decay;
         }
         gl_FragColor *= exposure;
    }


				</pre>
			</p>
			
				<h3>References
			</h3>
			<p id="paperbox">
				<br/>
				[Mitchell]:  Kenny  Mitchell "Volumetric Light Scattering as a Post-Process" GPU Gems 3 (2005). <br/>
				[Mitchell2]: Jason Mitchell  "Light Shaft Rendering" ShadersX3 (2004). <br/>
				<br/>
				
				<a href="http://www.amazon.ca/GPU-Gems-3-Hubert-Nguyen/dp/0321515269/ref=pd_sim_b?ie=UTF8&qid=1233937485&sr=1-5" ><img style="box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="../books/gpugems3.jpg"/></a>

				<a href="http://www.amazon.ca/ShaderX3-Advanced-Rendering-DirectX-OpenG/dp/1584503572/ref=sr_1_5?ie=UTF8&s=books&qid=1233937485&sr=1-5" ><img style="margin-left:15px;box-shadow: rgb(119, 119, 119) 3px 3px 3px;" src="../books/shaderx3.jpg"/></a>
			</p>
			
			
<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>





