<script type="text/javascript">
  var disqus_identifier = "Prince_of_persia_Code_Review" ;
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="Prince Of Persia, 6502, Apple II, Code review"/>
		<meta name="Description" content="Prince Of Persia Code Review"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Prince Of Persia Code Review  Part 1</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       June 14th, 2013</div>
   <h1>Prince Of Persia Code Review: Part 1 (Introduction)</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="prince_of_persia.png" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         
<style type="text/css">
.shadowed-book{
  box-shadow: rgb(119, 119, 119) 3px 3px 3px;
  
 
  
  margin-right: 12px;
}

</style>

On Apr 17, 2012 Jordan Mechner <a href="http://jordanmechner.com/blog/2012/04/source/">released the source code</a> of Prince of Persia.<br/>
<br/>
 Even though it is the Apple II version written in 6502 assembly language, it was a pleasant experience to dive in the code of that mythical game: As usual there were many fascinating sofware wizardries to discover.<br/>
    <br/>
    The Apple II apparent poor environment for game programming was actually ground to unmatched innovation and creativity : From self-modifying code, in-house bootloader, clever floppy disc
    format to skewing lookup tables: Prince Of Persia features engineering treasures in every modules.<br/>
    <br/>
    Reading the source allowed me not only to learn about the game development process of the 80s but it also renewed my appreciation for things that we take for granted today.<br/>
    
    <br/>As usual I took numerous notes that I have cleaned up on this page. I hope it will inspire others to read more source code and become better engineers.<br/>
    <br/>
    <u>Acknowledgment :</u> I would like to thank Miles.J from 6502.org and Roland Gustafsson (author of RWTS18) for patiently sharing their knowledge with me.
<br/>
<br/>
<a href="index.php">Part I : Introduction</a><br/>
<a href="pop_boot.php">Part II : Bootloader</a><br/>
<a href="pop_boot2.php">Part III : Code explained</a><br/>
<br/>
<u>EDIT June 17th, 2013 :</u> Jordan Mechner commented on this article (#32).<br/>
<u>EDIT June 17th, 2013 :</u> Andreas Varga (whom reverse engineer POP before the source code release) also commentd (#41) !<br/>
<br/>
<div style="clear:both;">
</div>

 
<h3>Where to start ?</h3>
<p id="paperbox">
The <a href="https://github.com/jmechner/Prince-of-Persia-Apple-II">source code</a> is available in a GitHub repository and can be downloaded with one command: <br/>
<pre class="long">


   git clone git://github.com/jmechner/Prince-of-Persia-Apple-II.git
   
   
</pre>
<br/>
<p>
  The interesting part is in <code>/Prince-of-Persia-Apple-II/01 POP Source/Source/</code> which contains the game engine made of numerous <code>.S</code> files.<br/>
  That is the first thing that programmers back then did not have: High level languages with high quality compilers. To achieve high performances developers had to work down to the metal using 6502 assembly. This is what those <code>.S</code> files are.</br>
  </br>
  <img style="float:left;margin-right:10px;width:410px; height:458px;" src="../fd_proxy/prince_of_persia/files_to_ram.png" /><br/>

  According to Jordan Mechner's book: <a href="http://www.amazon.com/The-Making-Prince-Persia-Journals/dp/1468093657/ref=sr_1_1?ie=UTF8&qid=1370971768&sr=8-1&keywords=making+of+prince+of+persia">Making of Prince of Persia</a>, POP used Merlin assembler.<br/>
  <br/>
  One of the good feature of Merlin is the <code>ORG</code> directive which allows to hint the assembler where the instructions will be loaded in RAM: In POP, there is a <code>ORG</code> directive at the top of every files.<br/>
  <br/>
  <u><b>Trivia :</b></u> <code>ORG</code> directives were really just hints. There was no operating system and no linker/loader on Apple II: The developer had to "somehow" manage to transfer the instructions from floppy disc
  to the intended location.
<br/>
<div style="clear:both;">
  <br/>
  The second important thing to understand to get POP big picture is how modules communicate together. Since there were no inter-file linker back then (and no final executable, only fragments) modules have to communicate by jumping into the void...where other modules are supposed to be.<br/>
  <br/>
   <img style="float:left;margin-right:20px;margin-left:21px;width:399px; height:451px;" src="../fd_proxy/prince_of_persia/intermod_jumps.png" /><br/>
  As an example we can see in the bootloader <code>BOOT.S</code> at <a href="https://github.com/fabiensanglard/Prince-of-Persia-Apple-II/blob/master/01%20POP%20Source/Source/BOOT.S#L138">line 138</a>:
  <br/>
  <pre class="long" style="margin-top:10px;margin-left:440px;">



     jmp $ee00 


  </pre>
  <br/>
  <p>
    Which is a bit mysterious.<br/>
    <br/>In order to follow the instruction stream we need to find out what is at <code>$ee00</code>. With a little grep command we can see <code>org = $ee00</code> in <code>HIRES.S</code> and carry on.<br/>
    <br/>
    <div style="clear:both;">
      <p>
<br/><br/><br/>
  Because there were no linkers, developers of the 80s had to know the memory layout of their engine and understand their RAM budget. It is a practice that is quite uncommon today since a lot of professionals rely on garbage collectors or use auto-resizing vectors.
  <br/>
</br>

</p>

<br/>
<h3>6502 Assembly</h3>
<p id="paperbox">
That is it for the big picture and how to navigate sub-systems. Now to understand the content of each module, you must know a bit about the CPU. Luckily, the 6502 is a simple 8-bit processor with a 16-bit address bus. It features only three registers able to address 64K of RAM (bank switching extended that to 128K), no floating-point capabilities and no segmentation for a total of only 56 instructions.<br/>
<br/>
<br/>
<img class="shadowed" style="margin: 0px 25px 0px 0px; display: inline; width: 500px; height: 477px; float: left;" src="../lazy_load/grey.gif" data-original="/fd_proxy/prince_of_persia/6502_instructions.png">

 
<div style="display:inline; ">
The drawing on the left shows how simple everything is:<br/>

<ul style="overflow: auto;">
   <li>Grey: 64KB of RAM, including 256 bytes reserved for the stack.</li>
   <li>Blue: 3 registers X,A,Y (8bits).</li>
   <li>Green: One 16 bits Program Counter.</li>
   <li>Red: One  8 bits Stack Pointer.</li>
   <li>Yello: A few STATUS flags.</li>
</ul>
Most operation are for loading and storing the register, X and Y register have simple instructions while the Accumulator is a little bit more fancy but overall it is straightforward and well documented.
</div>
<div style="clear:both;"/>
<br/>
<p>
 Two great books that are unfortunately out of print today : <a href="../fd_proxy/prince_of_persia/a2rm.pdf">Apple II Reference Manual</a> and <a href="../fd_proxy/prince_of_persia/Inside&#32;the&#32;Apple&#32;IIe.pdf">Inside the Apple IIe</a>.<br/>
<br/>
<img class="shadowed" style="margin-left: auto; margin-right: auto; display: block; width: 900px; height: 675px; " src="../lazy_load/grey.gif" data-original="/fd_proxy/prince_of_persia/books.JPG"> 
</p>



<br/>
<h3>Starting point</h3>
<p id="paperbox">

There were no IDEs in the 80s and there are no C source files with a <code>main</code> method today so we cannot really tell where the program starts. In order to know where to read first we have to know how the Apple II booted:<br/>
<ol>
 <li>Read the first byte X of sector 0 on track 0 from the floppy disk.</li>
 <li>Load X sector(s) from track 0 to RAM at address <code>$800</code>.</li>
 <li>Start executing code at <code>$800</code>.</li>
</ol>
<p>
  In order to find the starting point we can look what module was hinted to run at <code>$800</code> by searching for <code>ORG</code> directive:

  <pre class="long">


    fabiensanglard$ find . -name "*.S" -exec grep -H "org = \$800" {} \;

    ./01 POP Source/Source/BOOT.S:org = $800
    ./02 POP Disk Routines/CP.525/POPBOOT0.S:org = $800
    ./03 Disk Protection/POPBOOT0.S:org = $800
    ./04 Support/MakeDisk/DRAZ/DRAZ.S:org = $800
    ./04 Support/MakeDisk/S/BOOT.S:org = $800


  </pre>
  <p>
    So the starting point is in <code>BOOT.S</code>: a file that we will see it later contains POP bootloader.
</p>






<h3>Recommend readings</h3>
<p id="paperbox">
Jordan Mechner published his journals (available as a book or a pdf). It is a very accurate description of what game developers have to go through during the development of a game: Doubt, pressure, despair hope and excitement to name only a few feelings.<br/>
<br/>
<a href="http://www.amazon.com/The-Making-Prince-Persia-Journals/dp/1468093657/ref=sr_1_1?ie=UTF8&qid=1370971768&sr=8-1&keywords=making+of+prince+of+persia"><img src="../fd_proxy/prince_of_persia/pop_book.jpg" class="shadowed-book"/></a>
<a href="http://www.amazon.com/The-Making-Karateka-Journals-1982-1985/dp/1480297232/ref=sr_1_1?ie=UTF8&qid=1370978099&sr=8-1&keywords=making+of+karateka">
<img src="../fd_proxy/prince_of_persia/karateka_book.jpeg" class="shadowed-book"/>
</a>
<br/>
<br/>
For the more technically inclined, check out the developer notes that was intended to Atari/Amniga/PC developers (those ports did not go very well but I won't spoil the "Making Of" journal).<br/>
<br/>
<a href="../fd_proxy/prince_of_persia/popsource009.pdf"><img src="../fd_proxy/prince_of_persia/pop_tech_doc.png" class="shadowed-book" style="width:198px;height:278px;"/></a>
<a href="../fd_proxy/prince_of_persia/Beneath&#32;Apple&#32;DOS.pdf"><img src="../fd_proxy/prince_of_persia/beneath_apple_DOS.png" class="shadowed-book" style="width:184px;height:278px;"/></a>
<a href="../fd_proxy/prince_of_persia/Inside&#32;the&#32;Apple&#32;IIe.pdf"><img src="../fd_proxy/prince_of_persia/inside_apple_II.png" class="shadowed-book" style="width:209px;height:278px;"/></a>
<a href="../fd_proxy/prince_of_persia/a2rm.pdf"><img src="../fd_proxy/prince_of_persia/apple_reference_manual.png" class="shadowed-book" style="width:203px;height:278px;"/></a>
<br/>
<br/>



A few videos from the legendary rotoscoping process and featuring "Tina LaDeau" (the Princess) that is mentioned in Jordan's diary ;) !<br/>

<br/>
<iframe width="560" height="315" src="https://www.youtube.com/embed/gC3WEwSJoHs" frameborder="0" allowfullscreen style="display:block; margin-left:auto;margin-right:auto;"></iframe>
<br/>
<br/>
<iframe width="420" height="315" src="https://www.youtube.com/embed/0vG403uFdYc" frameborder="0" allowfullscreen style="display:block; margin-left:auto;margin-right:auto;"></iframe>
<br/>
<br/>
<u><b>Note :</b></u> Jordan Mechner did an AMA on Reddit in January 2013, you can find it <a href="http://www.reddit.com/r/IAmA/comments/14e6p3/im_jordan_mechner_creator_of_prince_of_persia_and/">here</a>.
</p>



<h3>Next</h3>
<p id="paperbox">
    <a href="pop_boot.php">Prince Of Persia Bootloader</a>
<p/>
			
	<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>

