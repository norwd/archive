<script type="text/javascript">
  var disqus_identifier = "second_Reality_Code_Review" ;
</script>
<!DOCTYPE html>
<html>
	<head>	
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta name="Author" content="Fabien Sanglard">
		
		<meta name="Keywords" content="Second Reality, Future Crew, Second Reality source code"/>
		<meta name="Description" content="Second Reality source code review"/>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	

		
		

 
 	
		
		<title>Second Reality Code Review  Part 5</title>
		
	</head>
	<body>
		<div id="main">
           
					
			<link rel='stylesheet' href='../css/neo_style.css' type='text/css'  />



    <h1 id="site-name">
        <a  href="../index.html" >Fabien Sanglard's Website</a>
    </h1>

<script>
   function setEmailTitle()
	{
 		var folders = window.location.href.split("/"); 

		var currentFolder = folders[folders.length-2];

		var emailLink = document.getElementById("mail");

		emailLink.href = "mailto:fabiensanglard.net@gmail.com?subject="+currentFolder;

	}
	
	window.onload = setEmailTitle;
</script>
<style type='text/css'>
		/**
		 * Bulletproof syntax:
		 * http://www.fontspring.com/blog/further-hardening-of-the-bulletproof-syntax
		 * Font files generated by Font Squirrel:
		 * http://www.fontsquirrel.com
		 * License: Open Font License. See http://evenchick.com/wp-content/themes/blaskan/OFL.txt.
		 */
		@font-face {
			font-family: 'LeagueGothic';
			src: url('../font/league_gothic/league_gothic-webfont.eot'); /* IE9 Compat Modes */
			src: url('../font/league_gothic/league_gothic-webfont.eot?iefix') format('eot'), /* IE6-IE8 */
			     url('../font/league_gothic/league_gothic-webfont.woff') format('woff'), /* Modern Browsers */
			     url('../font/league_gothic/league_gothic-webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
			     url('../font/league_gothic/league_gothic-webfont.svg') format('svg'); /* Legacy iOS */
		}
		
		@font-face {
			font-family: 'DejaVu Sans';
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf'); /* IE9 Compat Modes */
			src: url('../font/dejavu-sans/DejaVuSansMono.ttf')  format('truetype') /* Safari, Android, iOS */
			     
		}

		
</style>

<header id="header" role="banner"><nav id="nav" role="navigation"><div class="menu">
	<ul id="menu-primary-navigation-1" >
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-91">
           <a href="../index.html" >Home</a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95">
           <a href="../about/index.html">About</a>
         </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-96">
           <a href="../faq/index.html">FAQ</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-92">
            <a id="mail" href="mailto:fabiensanglard.net@gmail.com?subject=Tunnel" title="Send me an email.">Email</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-93">
            <a href="../rss.xml" title="Suscribe to RSS Feed.">Rss</a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-94">
            <a href="http://twitter.com/fabynou" title="Follow me on Twitter.">Twitter</a>
         </li>
     </ul></div></nav></header>
<!-- / #header -->
<section id="content" role="main">



		
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Feed" href="../rss.xml" />
<link rel="alternate" type="application/rss+xml" title="Fabien Sanglard &raquo; Comments Feed" href="../rss.xml" />
<div id="date">
       August 16th, 2013</div>
   <h1>Second Reality Code Review: Part 5 (Parts)</h1>
   <p id="paperbox">
	   	
          <a  href="index.php">
          <img src="second_reality.png" style="margin-left: 2ch;float:right; border:1px black solid;width:35%;">   
          </a> 
         
<style type="text/css">
.shadowed-book{
  box-shadow: rgb(119, 119, 119) 3px 3px 3px;
  
 
  
  margin-right: 12px;
}

</style>

Each Second Reality visual effects is a full DOS executable. They are called PART and there are 23 of them in total. This design decision allowed fast prototyping, simultaneous development (since FC probably did not have source control tools) and free languages choice (ASM, C and even Pascal can be found in the source).</br>
<br/>

<a href="index.php">Part 1:  Introduction</a><Br/>
<a href="second_reality_engine.php">Part 2: Engine</a><Br/>
<a href="second_reality_dis.php">Part 3: Demo Interrupt Server</a><Br/>
<a href="second_reality_dev_Vs_Prod.php">Part 4: Dev Vs Prod</a><Br/>
<a href="second_reality_parts.php">Part 5: Parts</a><Br/>
 <br/>
 <div style='clear:both;'/>
</p>
<h3>Parts</h3>
<p id="paperbox">
  A list of each PART/EXE can be found in the source code of the Engine:
   <a href="https://github.com/fabiensanglard/SecondReality/blob/master/MAIN/U2.ASM#L56">U2.ASM</a>.
Here is a more pleasant summary of the 23 parts (with source code location since the names can be very confusing) :<br/>
<br/>
 <style> 
table.credits{
    
    background: #fff;
   font: 12px 'DejaVu Sans';
    box-shadow: rgb(119, 119, 119) 3px 3px 3px;
    margin: 0px 0px 0px 15px;
    
}
  table.credits { width:97%; a:link:color:rgb(0, 136, 204);}
table.credits thead { background:transparent; }
  
  table.credits th { white-space:nowrap; }
  table.credits thead th { border-left:1px solid #ccc;  border-top:1px solid #ccc; padding:9px 9px 3px; color:#999; }
  table.credits tbody th,
  table.credits tbody td { border-top:1px solid #ccc; padding:6px 9px; }
  table.credits tbody th { padding:7px 0 7px 0; text-align:center; color:#999; }
  table.credits tbody th b { color:#333; font-weight:normal; }
  table.credits tbody td { border-left:1px solid #ccc; }
  
  table.credits tbody .session { background:#d4e6fa url(session_bgblue.png) repeat-x 0 0; }
  table.credits tbody .session.alt { background:#e9ecf0 url(session_bggray.png) repeat-x 0 0; }
  table.credits tbody .session h2 { font-size:1em; margin-bottom:0; color:rgb(0, 136, 204); }
  table.credits tbody .session .hud-content { display:none; }

  td.right
  {
    border-right:1px solid #ccc;
  }

    
    
  
  </style> 

  <table align="center" class="credits" cellspacing="0" cellpadding="0" border="0">

<tr>
  <td>Name</td>
  <td>Executable</td>
  <td>Coder</td>
  <td>Screenshot</td>
  <td>Source</td>
</tr>

<tr>
  <td></td>
  <td>STARTMUS.EXE</td>
  <td></td>
  <td></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/MAIN/STARTMUS.C">MAIN/STARTMUS.C</a></td>
</tr>

<tr>
  <td></td>
  <td>START.EXE</td>
  <td>WILDFIRE</td>
  <td align=center><a href="parts/02-START.png"><img src="parts/02-START_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/START/MAIN.C">START/MAIN.c</a></td>
</tr>

<tr>
  <td>Hidden part</td> 
  <td>DDSTARS.EXE</td><td>WILDFIRE</td>
  <td align=center><a href="parts/03-DDSTARS.png"><img src="parts/03-DDSTARS_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/DDSTARS/STARS.ASM">DDSTARS/STARS.ASM</a></td>
</tr>

<tr>
  <td>Alkutekstit I</td>
  <td>ALKU.EXE</td>
  <td>WILDFIRE</td>
  <td align=center><a href="parts/04-ALKU.png"><img src="parts/04-ALKU_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/ALKU/MAIN.C">ALKU/MAIN.C</a</td>
</tr>

<tr>
  <td>Alkutekstit II</td>
  <td>U2A.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/05-U2A.png"><img src="parts/05-U2A_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/C/CPLAY.C">VISU/C/CPLAY.C</a></td>
</tr>

<tr>
  <td>Alkutekstit III</td> 
  <td>PAM.EXE</td>
  <td>TRUG/WILDFIRE</td>
  <td align=center><a href="parts/06-PAM.png"><img src="parts/06-PAM_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/tree/master/PAM">PAM/</a></td>
</tr>

<tr>
  <td></td> 
  <td>BEGLOGO.EXE</td>
  <td></td>
  <td align=center><a href="parts/07-BEGLOGO.png"><img src="parts/07-BEGLOGO_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/BEG/BEG.C">BEG/BEG.C</a></td>
</tr>

<tr>
  <td>Glenz</td> 
  <td>GLENZ.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/08-GLENZ.png"><img src="parts/08-GLENZ_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/GLENZ/">GLENZ/</a></td>
</tr>

<tr>
  <td>Dottitunneli</td>
  <td>TUNNELI.EXE</td>
  <td>TRUG</td>
  <td align=center><a href="parts/09-TUNNELI.png"><img src="parts/09-TUNNELI_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/TUNNELI/TUN10.PAS">TUNNELI/TUN10.PAS</a></td>
</tr>

<tr>
  <td>Techno</td>
  <td>TECHNO.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/10-TECHNO.png"><img src="parts/10-TECHNO_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/TECHNO/KOEA.ASM">TECHNO/KOEA.ASM</a></td>
</tr>

<tr>
  <td>Panicfake</td>
  <td>PANICEND.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/11-PANICEND.png"><img src="parts/11-PANICEND_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/tree/master/PANIC">PANIC</a></td>
</tr>

<tr>
  <td>Vuori-Scrolli</td>
  <td>MNTSCRL.EXE</td>
  <td></td>
  <td align=center><a href="parts/12-MNTSCRL.png"><img src="parts/12-MNTSCRL_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/FOREST/READ2.PAS">FOREST/READ2.PAS</a></td>

</tr>

<tr>
  <td>Desert Dream Stars</td> 
  <td>DDSTARS.EXE</td>
  <td>TRUG</td>
  <td align=center><a href="parts/13-DDSTARS.png"><img src="parts/13-DDSTARS_thumb.png" /></a></td>
  <td></td>
</tr>

<tr>
  <td>Lens</td>                  
  <td></td>
  <td>PSI</td>
  <td align=center><a href="parts/14-LNS&amp;ZOOM.png"><img src="parts/14-LNS&amp;ZOOM_thumb.png" /></a></td>
  <td></td>
</tr>

<tr>
  <td>Rotazoomer</td>            
  <td>LNS&ZOOM.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/14-LNS&amp;ZOOM-2.png.png"><img src="parts/14-LNS&amp;ZOOM-2_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/tree/master/LENS">LENS/</a></td>
</tr>

<tr>
  <td>Plasma</td>              
  <td></td>
  <td>WILDFIRE</td>
  <td align=center><a href="parts/15-PLZPART.png"><img src="parts/15-PLZPART_thumb.png" /></a></td>
  <td></td>
</tr>

<tr>
  <td>Plasmacube</td>          
  <td>PLZPART.EXE</td>
  <td>WILDFIRE</td><td align=center><a href="parts/15-PLZPART-2.png"><img src="parts/15-PLZPART-2_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/tree/master/PLZPART">PLZPART/</a></td>
</tr>

<tr>
  <td>MiniVectorBalls</td>       
  <td>MINVBALL.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/16-MINVBALL.png"><img src="parts/16-MINVBALL_thumb.png" /></a></td>
   <td><a href="https://github.com/fabiensanglard/SecondReality/tree/master/DOTS">DOTS/</a></td>
</tr>

<tr>
  <td>Peilipalloscroll</td>     
  <td>RAYSCRL.EXE</td>
  <td>TRUG</td>
  <td align=center><a href="parts/17-RAYSCRL.png"><img src="parts/17-RAYSCRL_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/WATER/DEMO.PAS">WATER/DEMO.PAS</a></td>
</tr>

<tr>
  <td>3D-Sinusfield</td>         
  <td>3DSINFLD.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/18-3DSINFLD.png"><img src="parts/18-3DSINFLD_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/COMAN/DOLOOP.C">COMAN/DOLOOP.C</a></td>
</tr>

<tr>
  <td>Jellypic</td>              
  <td>JPLOGO.EXE</td><td>PSI</td>
  <td align=center><a href="parts/19-JPLOGO.png"><img src="parts/19-JPLOGO_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/JPLOGO/JP.C">JPLOGO/JP.C</a></td>
</tr>

<tr>
  <td>Vector Part II'</td>               
  <td>U2E.EXE</td>
  <td>PSI</td>
  <td align=center><a href="parts/20-U2E.png"><img src="parts/20-U2E_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/C/CPLAY.C">VISU/C/CPLAY.C</a></td>
</tr>

<tr>
  <td>Credits/Greetings</td>
  <td></td>
  <td></td>
  <td></td>
  <td></td>
</tr> 

<tr>
  <td></td>
  <td>ENDLOGO.EXE</td>
  <td></td>
  <td align=center><a href="parts/21-ENDLOGO.png"><img src="parts/21-ENDLOGO_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/END/END.C">END/END.C</a></td>
</tr>

<tr>
  <td></td>
  <td>CRED.EXE</td>
  <td>WILDFIRE</td>
  <td align=center><a href="parts/22-CRED.png"><img src="parts/22-CRED_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/CREDITS/MAIN.C">CREDITS/MAIN.C</a></td>
</tr>

<tr>
  <td></td>
  <td>ENDSCRL.EXE</td>
  <td></td>
  <td align=center><a href="parts/23-ENDSCRL.png"><img src="parts/23-ENDSCRL_thumb.png" /></a></td>
  <td><a href="https://github.com/fabiensanglard/SecondReality/blob/master/ENDSCRL/MAIN.C">ENDSCRL/MAIN.C</a></td>
</tr>

</table>
<p>
  <br/>
  It seems each developer had his specialty and they could be mixed during a same sequence. It is especially visible during the first scrolling/ships/explosion sequence
  (Alkutekstit). Even though it looks like a continuous effect, it is actually three executables coded
  by three different persons:<br/>
  <br/>
  <table align=center>
    <tr align=center><td colspan=3><b>Alkutekstit (Credits) sequence</b></td></tr>
    <tr><td><img src="parts/04-ALKU_seq.png" /></td>
        <td><img src="parts/05-U2A_seq.png" /></td>
        <td><img src="parts/06-PAM_seq.png" /></td>
      </tr>
    <tr align=center><td>ALKU by WILDFIRE</td><td>U2A by PSI</td><td>PAM by TRUG/WILDFIRE</td></tr>
  </table>

<p/>




<h3>Assets</h3>
<p id="paperbox">
  The images assets (<code>.LBM</code>) were generated using <a href="http://en.wikipedia.org/wiki/Deluxe_Paint">Deluxe Paint</a>, an extremely popular bitmap editor in the 90s. The interesting thing is that they were converted to an array of byte and compiled within a PART.
  As a result, loading the exe also loaded all the assets. It also made reverse-engineering harder.<br/>
  <br/>
  An other cool set of assets are the famous <a href="https://github.com/fabiensanglard/SecondReality/tree/master/VISU/C/CITY.3DS">CITY</a> and the <a href="https://github.com/fabiensanglard/SecondReality/tree/master/3DS/PXLSHIP3.3DS">SHIP</a> from the final 3D sequence :<br/>
  <br/>
  <img src="second&#32;reality&#32;city.png" style="box-shadow: rgb(119, 119, 119) 3px 3px 3px; display:block; margin-right:auto; margin-left:auto; width: 730px; height: 310px;"/><br/>
  <img src="second&#32;reality&#32;ship.png" style="box-shadow: rgb(119, 119, 119) 3px 3px 3px; display:block; margin-right:auto; margin-left:auto;width: 732px; height: 512px;"/>
</p>


<h3>Part internals</h3>
<p id="paperbox">
  Since they are compiled to a DOS executable, PARTs can use any language:
  <ul>
   <li>ASM.</li>
   <li>C.</li>
   <li>PASCAL: <a href="https://github.com/fabiensanglard/SecondReality/blob/master/FOREST/READ2.PAS">Brass knuckles monster (MNTSCRL.EXE)</a>, <a href="https://github.com/fabiensanglard/SecondReality/blob/master/TUNNELI/TUN10.PAS">Dotted Tunnel (TUNNELI.EXE)</a> and 
  <a href="https://github.com/fabiensanglard/SecondReality/blob/master/WATER/DEMO.PAS">Raytracing sword (RAYSCRL.EXE)</a>.</li>
  <li>Some parts go even further and use C in order to generate ASM code: <a href="https://github.com/fabiensanglard/SecondReality/blob/master/GLENZ/DOLOOP.C">GLENZ/DOLOOP.C</a> (The bouncing polyhderon) and the <a href="https://github.com/fabiensanglard/SecondReality/blob/master/COMAN/DOLOOP.C">Water effect (3DSINFLD.EXE)</a>.</li>

</ul>
<p>
  In terms of memory usage, I read a lot of things involving MMU on Wikipedia and other websites...but
  actually each part was free to use whatever it wanted since it was unloaded entirely after usage.<br/>
  <br/>
  In terms of VGA, each part uses its own set of tricks and run at different resolutions. It is neither
  Mode 13h nor ModeX but rather tweaked mode 13h with custom resolution everywhere. The <a href="https://github.com/fabiensanglard/SecondReality/blob/master/SCRIPT">SCRIPT</a> file
  mentions a lot of 320x200 and 320x400.<br/>
  <br/>
  Unfortunately, reading the source code become quite difficult at the PART level: The code
  quality and comments drops sharply at this point.<br/> Maybe it is due to urgency or the
  fact that only one dev was working on a PART (so no "real" need to comment or be clear) but
  the result is something completely opaque :
  <ul>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/PANIC/SHUTDOWN.C#L61">PANIC</a></li>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/GLENZ/DOLOOP.C#L38">GLENZ</a></li>
  </ul>
  <p>
    Not only the algorithms are difficult, the variable names are also a challenge (<code>a</code>, <code>b</code>, <code>co[]</code>, ... )
  It could have been so much more readable if the devs had given us a few pointers in the release notes. As a result I did not spend too much time reading each of them individually,
  except for the 3D engine responsible for U2A.EXE and U2E.EXE.
</p>


<h3>Second Reality 3D engine</h3>
<p id="paperbox">
  <div style="width:100%; display: table-cell; vertical-align: middle ">
    <img src="3d_end.png" style="box-shadow: rgb(119, 119, 119) 3px 3px 3px; margin-right:auto; margin-left:auto; width: 448px; height: 253px;"/>
    <img src="3d_end2.png" style="box-shadow: rgb(119, 119, 119) 3px 3px 3px; margin-right:auto; margin-left:auto;width: 448px; height: 253px;"/><Br/>
</div>
  <br/>
  I still took a close look at the 3D engine, which was used in two places: <code>U2A.EXE</code> and <code>U2E.EXE</code>.<br/>
  <br/>
  The source code is C with Assembly optimized routines (especially filling and Gouraud shading):
  <ul>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/C/CITY.C">CITY.C</a> (Main).</li>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/VISU.C">VISU.C</a> (Library <code>visu.lib</code>).</li>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/AVID.ASM">AVID.ASM</a> (Optimized video assembly (clear, copy screen, etc)).</li>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/ADRAW.ASM">ADRAW.ASM</a> (Object drawing and clipping).</li>
    <li><a href="https://github.com/fabiensanglard/SecondReality/blob/master/VISU/ACALC.ASM">ACALC.ASM</a> (Matrices and sin/cos fast calculations).</li>
  </ul>
  <p>
 <br/>
    <p>
      <img src="sr_3d_engine.png" style="float:left;margin-right:20px;height:257px;width:279xp;" />
      The architecture of those components is pretty cool: A <code>VISU</code> library does all the heavy lifting like loading assests: 3DS objects, materials and streams (camera movement and ships movements).<br/>
      <br/>
      The engine sorts objects to draw and renders with a painter algorithm. That induces a lot
      of overdraw but since VGA latches allows to write 4 pixels simultaneously it is not bad at all.<br/>
      <br/>
      <u><b>Trivia :</u></b> The engine carries transformations in an "old school" way: Instead of 
      using the common 4x4 homogeneous matrices, it uses a 3*3 rotations matrix and a translation vector.<br/>
      <br/>
      Here is a pseudo code summary :

       <div style='clear:both;'/>
       <br/>
      <pre class="long">

      
      <span style="color:blue;">main</span>(){

            scenem=readfile(tmpname);  <span style="color:green;">// Load materials</span>
            scene0=readfile(tmpname);  <span style="color:green;">// Load animation</span>

            <span style="color:blue;">for</span>(f=-1,c=1;c&lt;d;c++){  <span style="color:green;">//Load objects</span>
              sprintf(tmpname,"%s.%03i",scene,e);
              co[c].o=vis_loadobject(tmpname);
            }

            vid_init(1);
            vid_setpal(cp);

            <span style="color:blue;">for</span>(;;){

                vid_switch();
                _asm mov bx,1   _asm int 0fch <span style="color:green;">// waitb for retrace via copper simulator interrupt call </span>
                vid_clear();
                
                <span style="color:green;">// parse animation stream, update objects</span>
                <span style="color:blue;">for</span>(;;){}

                vid_cameraangle(fov); <span style="color:green;">// Field of vision</span>

                <span style="color:green;">// Calc matrices and add to order list (only enabled objects)</span>
                <span style="color:blue;">for</span>(a=1;ac&lt;conum;a++) if(co[a].on) /* start at 1 to skip camera */
                    calc_applyrmatrix(o->r,&cam);

                <span style="color:green;">// Zsort via Bubble Sort</span>
                <span style="color:blue;">for</span>(a=0;ac&lt;ordernum;a++)
                    <span style="color:blue;">for</span>(b=a-1;b>=0 && dis>co[order[b]].dist;b--)

                <span style="color:green;">// Draw</span>
                <span style="color:blue;">for</span>(a=0;ac&lt;ordernum;a++)
                    vis_drawobject(o);
              }
            }
            <span style="color:blue;">return</span>(0);
     }

    </pre>
</p>


<h3>Ports to modern systems.</h3>
<p id="paperbox">
  <u><b>EDIT: Thu, January 30, 2014:</b></u><br/>
  <br/>
  Since the parution of this article, many developers have started to port Second Reality to modern systems. Claudio Matsuoka started <a href="https://github.com/cmatsuoka/sr-port">sr-port</a> a C, Linux and OpenGL ES 2.0 port
  which looks rather impressive so far. Nick Kovac's did a lot of work on the plz part and ported it to C (now part of sr-port source code) and also <a href="http://ndkovac.tumblr.com/">ported it to javascript</a> :<br/>
  <br/>
  <script src="Plasma.js"></script>
  <div style="width:100%; display:block; text-align:center;">
    <canvas id="canvas" style="width:900px; height:562px;"><!-- canvas --></canvas>
  </div>
  <br/>
</p>


<h3>Next</h3>
<p id="paperbox">
  <a href="index.php">Back to "Second Reality Introduction"</a>
</p>


	<!-- <h2>Comments</h2>
<p> -->


     <!-- <div id="disqus_thread"></div> -->
    <!-- <script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'fabiensanglardswebsite'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || 
                document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript> -->
    <!--<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> -->
<!--     




</p> -->

 <h2 style="padding: 0px; margin: 0px;">&nbsp;</h2>
<div style="text-align:center ;">@</div>

		</div>
</div>

	<script src="../lazy_load/jquery.min.js" type="text/javascript" charset="utf-8"></script>
 	

  	<script src="../lazy_load/jquery.lazyload.min.js?v=3" type="text/javascript" charset="utf-8"></script>
	<script type="text/javascript" charset="utf-8">
		      $(function() {
		          $("img").lazyload({
		              effect : "fadeIn"
		          });
		      });
    </script>	
	</body>

</html>

  <
