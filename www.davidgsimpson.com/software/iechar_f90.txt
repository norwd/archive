!***********************************************************************************************************************************
!  IECHAR
!
!  This is the EBCDIC version of Fortran function IACHAR.  It returns the position of a character in the EBCDIC collating sequence.
!
!  Given an EBCDIC character E, this function returns the corresponding integer N.
!
!  Author:  Dr. David G. Simpson, NASA Goddard Space Flight Center, Greenbelt, MD USA - June 1, 2020
!***********************************************************************************************************************************

      FUNCTION IECHAR (E) RESULT (N)

      IMPLICIT NONE

      CHARACTER, INTENT(IN) :: E
      INTEGER :: N

      INTEGER :: I

      LOGICAL :: FOUND

      CHARACTER, DIMENSION(0:255), PARAMETER :: EBCDIC_TBL = (/   &
!         0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',  &    ! 00 - 0F
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',  &    ! 10 - 1F
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',  &    ! 20 - 2F
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.',  &    ! 30 - 3F
         ' ', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '<', '(', '+', '.',  &    ! 40 - 4F
         '&', '.', '.', '.', '.', '.', '.', '.', '.', '.', '!', '$', '*', ')', ';', '.',  &    ! 50 - 5F
         '-', '/', '.', '.', '.', '.', '.', '.', '.', '.', '|', ',', '%', '_', '>', '?',  &    ! 60 - 6F
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', ':', '#', '@', "'", '=', '"',  &    ! 70 - 7F
         '.', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', '.', '.', '.', '.', '.', '.',  &    ! 80 - 8F
         '.', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', '.', '.', '.', '.', '.', '.',  &    ! 90 - 9F
         '.', '~', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '.', '.', '.', '.', '.', '.',  &    ! A0 - AF
         '.', '.', '.', '.', '.', '.', '.', '.', '.', '`', '.', '.', '.', '.', '.', '.',  &    ! B0 - BF
         '{', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', '.', '.', '.', '.', '.', '.',  &    ! C0 - CF
         '}', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', '.', '.', '.', '.', '.', '.',  &    ! D0 - DF
         '\', '.', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '.', '.', '.', '.', '.', '.',  &    ! E0 - EF
         '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '.', '.', '.', '.', '.'  /)    ! F0 - FF

      FOUND = .FALSE.
      DO I = 1, 256
         IF (E .EQ. EBCDIC_TBL(I)) THEN
            FOUND = .TRUE.
            EXIT
         END IF
      END DO

      IF (FOUND) THEN
         N = I
      ELSE
         N = -1
      END IF

      RETURN

      END
