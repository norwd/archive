From 6a88229721cabfd6e288c31e8a539f68684f4761 Mon Sep 17 00:00:00 2001
From: sympodius <mail@sympodius.net>
Date: Fri, 10 Mar 2023 21:57:10 +0000
Subject: [PATCH] Patch tested for 20211119-58414bee958f2 release of useless
 gap.

---
 config.def.h |  2 ++
 dwm.c        | 29 +++++++++++++++++++++++++++++
 2 files changed, 31 insertions(+)

diff --git a/config.def.h b/config.def.h
index 79ae7cf..e3e9708 100644
--- a/config.def.h
+++ b/config.def.h
@@ -43,6 +43,7 @@ static const Layout layouts[] = {
 	{ "[]=",      tile },    /* first entry is default */
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
+	{ "[][]=",    tilewide },
 };
 
 /* key definitions */
@@ -78,6 +79,7 @@ static const Key keys[] = {
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_w,      setlayout,      {.v = &layouts[3]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
diff --git a/dwm.c b/dwm.c
index a747f60..87bbc23 100644
--- a/dwm.c
+++ b/dwm.c
@@ -209,6 +209,7 @@ static void spawn(const Arg *arg);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
+static void tilewide(Monitor *m);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
@@ -1728,6 +1729,34 @@ tile(Monitor *m)
 		}
 }
 
+void
+tilewide(Monitor *m)
+{
+        unsigned int i, n, w, h, mw, mx, ty;
+	Client *c;
+
+	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if (n == 0)
+		return;
+
+	if (n > m->nmaster)
+		mw = m->nmaster ? m->ww * m->mfact : 0;
+	else
+		mw = m->ww;
+	for (i = mx = ty = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+		if (i < m->nmaster) {
+		        w = (mw - mx) / (MIN(n, m->nmaster) - i);
+		        resize(c, m->wx + mx, m->wy, w - (2*c->bw) + (n > 1 ? gappx : 0), (m->wh - ty) - (2*c->bw), 0);
+		        if  (mx + WIDTH(c) < m->ww)
+		                mx += WIDTH(c);
+		} else {
+			h = (m->wh - ty) / (n - i);
+			resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), 0);
+			if (ty + HEIGHT(c) < m->wh)
+				ty += HEIGHT(c);
+		}
+}
+
 void
 togglebar(const Arg *arg)
 {
-- 
2.39.2

